namespace IPCU.Services
{
    using QuestPDF.Fluent;
    using QuestPDF.Helpers;
    using QuestPDF.Infrastructure;
    using IPCU.Models;
    using System;

    public class TrainingEvaluationPdfService
    {
        public static byte[] GeneratePdf(TrainingEvaluation training)
        {
            return Document.Create(container =>
            {
                container.Page(page =>
                {
                    page.Margin(50);
                    page.Size(PageSizes.A4);

                    // ===== Header Section =====
                    page.Header().Column(col =>
                    {
                        col.Spacing(5);
                        col.Item().AlignCenter().Text("TRAINING EVALUATION REPORT").Bold().FontSize(22);
                        col.Item().AlignCenter().Text("Generated by IPCU System").FontSize(10).Italic();
                        col.Item().Element(container => container.PaddingVertical(5)).LineHorizontal(1);
                    });

                    // ===== Training Details Section (Formatted in Table) =====
                    page.Content().Column(col =>
                    {
                        col.Spacing(15);
                        col.Item().Border(1).Padding(10).Background(Colors.Grey.Lighten3).Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.ConstantColumn(120); // Label Column
                                columns.RelativeColumn();    // Value Column (Expands)
                            });

                            void AddRow(string label, string value)
                            {
                                table.Cell().Element(CellStyle).Text(label).Bold();
                                table.Cell().Element(CellStyle).Text(value);
                                table.Cell().ColumnSpan(2).Element(LineStyle).LineHorizontal(1); // Row separator
                            }

                            AddRow("Title", training.Title);
                            AddRow("Date", training.DateOfTraining.ToString("dd MMM yyyy"));
                            AddRow("Venue", training.Venue);
                            AddRow("Methodology", training.TrainingMethodology);

                            static IContainer CellStyle(IContainer container) =>
                                container.PaddingVertical(3).PaddingHorizontal(5);

                            static IContainer LineStyle(IContainer container) =>
                                container.PaddingVertical(2).ExtendHorizontal();
                        });

                        // ===== Section: Program Facilitation =====
                        col.Item().PaddingTop(10).Row(row =>
                        {
                            row.RelativeItem().Text("PROGRAM FACILITATION").Bold().FontSize(12);
                            row.AutoItem().Text(" - Rating").Bold().FontSize(12);
                        });

                        col.Item().Border(1).Padding(10).Table(table =>
                        {
                            table.ColumnsDefinition(columns =>
                            {
                                columns.RelativeColumn(); // Criteria Column
                                columns.ConstantColumn(60); // Rating Column (Fixed Width)
                            });

                            void AddRatingRow(string label, object value)
                            {
                                table.Cell().Element(CellStyle).Text(label);
                                table.Cell().AlignRight().Element(CellStyle).Text(value.ToString()).Bold();
                                table.Cell().ColumnSpan(2).Element(LineStyle).LineHorizontal(1);
                            }

                            AddRatingRow("Flow followed", training.FlowFollowed);
                            AddRatingRow("Rules clearly established", training.RulesEstablished);
                            AddRatingRow("Ability to initiate discussion", training.InitiateDiscussion);
                            AddRatingRow("Technical capability", training.TechnicalCapability);

                            static IContainer CellStyle(IContainer container) =>
                                container.PaddingVertical(4).PaddingHorizontal(5);

                            static IContainer LineStyle(IContainer container) =>
                                container.PaddingVertical(2).ExtendHorizontal();
                        });

                        // ===== Section: Module Evaluation =====
                        col.Item().PaddingTop(15).Text("MODULE EVALUATION").Bold().FontSize(12);
                        col.Item().Border(1).Padding(10).Column(column =>
                        {
                            column.Item().Text($"Content Organization: {training.ContentOrganization}");
                            column.Item().Text($"Objective Clearly Stated: {training.ObjectiveStated}");
                            column.Item().Text($"Content Quality: {training.ContentQuality}");
                            column.Item().Text($"Flow of Topic: {training.FlowOfTopic}");
                            column.Item().Text($"Relevance of the Topic: {training.RelevanceOfTopic}");
                            column.Item().Text($"Learning Activities: {training.LearningActivities}");
                            column.Item().Text($"Visual Aids (Module Presentation): {training.VisualAids}");
                        });

                        // ===== Section: Mastery of Subject Matter =====
                        col.Item().PaddingTop(15).Text("MASTERY OF SUBJECT MATTER").Bold().FontSize(12);
                        col.Item().Border(1).Padding(10).Column(column =>
                        {
                            column.Item().Text($"Ability to Present Knowledge: {training.PresentKnowledge}");
                            column.Item().Text($"Ability to Balance Principles: {training.BalancePrinciples}");
                            column.Item().Text($"Ability to Address Clarifications: {training.AddressClarifications}");
                        });

                        // ===== Section: Trainer Characteristics =====
                        col.Item().PaddingTop(15).Text("TRAINER CHARACTERISTICS").Bold().FontSize(12);
                        col.Item().Border(1).Padding(10).Column(column =>
                        {
                            column.Item().Text($"Preparedness of the SME: {training.Preparedness}");
                            column.Item().Text($"Teaching Personality: {training.TeachingPersonality}");
                            column.Item().Text($"Ability to Establish Rapport: {training.EstablishRapport}");
                            column.Item().Text($"Genuine Respect for Participants: {training.RespectForParticipants}");
                            column.Item().Text($"Voice Personality: {training.VoicePersonality}");
                            column.Item().Text($"Time Management: {training.TimeManagement}");
                        });

                        // ===== Section: Suggestions for Improvement =====
                        col.Item().PaddingTop(15).Text("SUGGESTIONS FOR IMPROVEMENT").Bold().FontSize(12);
                        col.Item().Border(1).Padding(10).Text(training.SuggestionsForImprovement ?? "N/A");
                    });

                    // ===== Footer Section =====
                    page.Footer()
                        .AlignCenter()
                        .Text($"Generated on {DateTime.Now:dd MMM yyyy}").FontSize(10).Italic();
                });
            }).GeneratePdf();
        }
    }
}
