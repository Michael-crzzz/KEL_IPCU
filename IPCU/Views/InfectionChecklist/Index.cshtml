@model IPCU.Models.SSTInfectionModel

@{
    ViewBag.Title = "SST Infection Checklist";
}

<style>
    fieldset {
        border: 2px solid #000;
        padding: 10px;
        margin-bottom: 20px;
    }

    legend {
        font-weight: bold;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 10px;
    }

    td, th {
        border: 1px solid #000;
        padding: 5px;
        vertical-align: top;
    }

    label {
        font-weight: normal;
    }
</style>


<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="border border-black bg-white rounded-md p-4 space-y-4">
    <!-- HEADER -->
    <div class="grid grid-cols-3 items-center border border-black">
        <!-- Left Logo -->
        <div class="flex justify-center p-2 border-r border-black">
            <img src="/images/nkti-left-logo.png" alt="Left Logo" class="h-20 w-auto" />
        </div>
        <!-- Center Text -->
        <div class="text-center space-y-1 py-2">
            <p class="text-sm font-bold uppercase">National Kidney and Transplant Institute</p>
            <p class="text-sm">East Avenue, Quezon City</p>
            <p class="text-sm font-bold uppercase pt-2">Infection Prevention and Control Unit</p>
            <p class="text-sm font-bold uppercase border-t border-black pt-1">SST Infection Checklist Form</p>
        </div>
        <!-- Right Logo -->
        <div class="flex justify-center p-2 border-l border-black">
            <img src="/images/nkti-right-logo-removebg-preview.png" alt="Right Logo" class="h-20 w-auto" />
        </div>
    </div>


@using (Html.BeginForm("Submit", "InfectionChecklist", FormMethod.Post))
{
    <fieldset>
        <legend>Patient Information</legend>
        <table>
            <tr>
                <td>@Html.LabelFor(m => m.Fname, "First Name") <br />@Html.TextBoxFor(m => m.Fname)</td>
                <td>@Html.LabelFor(m => m.Mname, "Middle Name") <br />@Html.TextBoxFor(m => m.Mname)</td>
                <td>@Html.LabelFor(m => m.Lname, "Last Name") <br />@Html.TextBoxFor(m => m.Lname)</td>
                <td>@Html.LabelFor(m => m.HospitalNumber) <br />@Html.TextBoxFor(m => m.HospitalNumber)</td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.DateOfBirth) <br />@Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { type = "date" })</td>
                <td>@Html.LabelFor(m => m.Age) <br />@Html.TextBoxFor(m => m.Age)</td>
                <td>@Html.LabelFor(m => m.UnitWardArea) <br />@Html.TextBoxFor(m => m.UnitWardArea)</td>
                <td>@Html.LabelFor(m => m.MainService) <br />@Html.TextBoxFor(m => m.MainService)</td>
            </tr>
            <tr>
                    <td>
                        @Html.LabelFor(m => m.DateOfEvent) <br />
                        @Html.TextBoxFor(m => m.DateOfEvent, "{0:yyyy-MM-dd}", new { type = "date", value = DateTime.Now.ToString("yyyy-MM-dd") })
                    </td>
                    <td>@Html.LabelFor(m => m.Investigator) <br />@Html.TextBoxFor(m => m.Investigator)</td>
                <td>@Html.LabelFor(m => m.DateOfAdmission) <br />@Html.TextBoxFor(m => m.DateOfAdmission, "{0:yyyy-MM-dd}", new { type = "date" })</td>
                <td>
                    @Html.LabelFor(m => m.Disposition) <br />
                    @Html.DropDownListFor(m => m.Disposition, new SelectList(new[]
                             {
                new { Value = "", Text = "-- Select Disposition --" },
                new { Value = "Mortality", Text = "Mortality" },
                new { Value = "Discharged", Text = "Discharged" },
                new { Value = "Still Admitted", Text = "Still Admitted" },
                new { Value = "Transferred In", Text = "Transferred In" },
                new { Value = "Transferred Out", Text = "Transferred Out" }
                }, "Value", "Text"), new { @class = "form-control", id = "dispositionSelect" })

                    @Html.LabelFor(m => m.DispositionDate)
                    @Html.TextBoxFor(m => m.DispositionDate, new { @class = "form-control", type = "date", id = "dispositionDateInput" })

                    <div id="dispositionTransferDiv" style="display: none;">
                        @Html.LabelFor(m => m.DispositionTransfer) <br />
                        @Html.TextBoxFor(m => m.DispositionTransfer, new { @class = "form-control", id = "dispositionTransferInput" })
                    </div>
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(m => m.Gender) <br />@Html.DropDownListFor(m => m.Gender, new SelectList(new[] { "Male", "Female" }))</td>
                <td>@Html.LabelFor(m => m.Classification) <br />@Html.DropDownListFor(m => m.Classification, new SelectList(new[] { "Pay", "Service" }))</td>
                <td>
                    @Html.LabelFor(m => m.MDRO) <br />
                    @Html.CheckBoxFor(m => m.MDRO, new { id = "mdroCheckbox" }) Yes

                    <div id="mdroganismDiv" style="display:none; margin-top:10px;">
                        @Html.LabelFor(m => m.MDROOrganism)
                        @Html.TextBoxFor(m => m.MDROOrganism, new { @class = "form-control", id = "mdroganismInput" })
                    </div>
                </td>
                <td>
                    @Html.LabelFor(m => m.InfectionType) <br />
                    <table>
                        <tr>
                            <td>
                                <div>
                                    <input type="checkbox" name="InfectionType" value="BURN"
                                    @(Model.InfectionType != null && Model.InfectionType.Contains("BURN") ? "checked" : "") />
                                    <label>BURN</label>
                                </div>
                                <div>
                                    <input type="checkbox" name="InfectionType" value="DECU"
                                    @(Model.InfectionType != null && Model.InfectionType.Contains("DECU") ? "checked" : "") />
                                    <label>DECU</label>
                                </div>
                            </td>
                            <td>
                                <div>
                                    <input type="checkbox" name="InfectionType" value="ST"
                                    @(Model.InfectionType != null && Model.InfectionType.Contains("ST") ? "checked" : "") />
                                    <label>ST</label>
                                </div>
                                <div>
                                    <input type="checkbox" name="InfectionType" value="SKIN"
                                    @(Model.InfectionType != null && Model.InfectionType.Contains("SKIN") ? "checked" : "") />
                                    <label>SKIN</label>
                                </div>
                            </td>
                        </tr>
                    </table>
                </td>


            </tr>
        </table>
    </fieldset>


    <!-- BURN Infection Section -->
    <div class="infection-section" id="section-burn">
    <fieldset>
        <legend>BURN - BURN INFECTION</legend>

        <!-- First Checkbox -->
        <div>
            @Html.CheckBoxFor(m => m.BurnAppearanceChange, new { @id = "burn-appearance-change" })
            @Html.Label("Patient has a change in burn wound appearance or character, such as rapid eschar separation, or dark brown, black, or violaceous discoloration of the eschar")
        </div>

        <!-- Hidden AND + Organism Checkbox -->
        <div id="burn-and-section">
            <p><strong>AND</strong></p>
            <div>
                @Html.CheckBoxFor(m => m.BurnOrganismIdentified, new { @id = "burn-organism-identified" })
                @Html.Label("Organism(s) identified from blood by a culture or non-culture based microbiologic testing method")
            </div>
        </div>

        <!-- Hidden Culture Date + Result Section -->
        <div id="burn-culture-section">
            <table>
                <tr>
                        <td>
                            @Html.LabelFor(m => m.BurnCultureDate, "Culture date:") <br />
                            @Html.TextBoxFor(m => m.BurnCultureDate, new { @class = "form-control", type = "date" })
                        </td>
                        <td>@Html.LabelFor(m => m.BurnCultureResults, "Culture results:") <br />@Html.TextAreaFor(m => m.BurnCultureResults)</td>
                </tr>
            </table>
        </div>
    </fieldset>
    </div>

    <!-- DECU Section -->
    <div class="infection-section" id="section-decu">
    <fieldset>
        <legend>DECU - DECUBITUS ULCER INFECTION</legend>

        <p><em>Also known as pressure injury infection, including both superficial and deep infections</em></p>

        <p><strong>At least two (2) of the following localized signs or symptoms:</strong></p>

        <div>
            @Html.CheckBoxFor(m => m.DecubitusErythema, new { @class = "decubitus-symptom" })
            @Html.Label("Erythema*")
        </div>
        <div>
            @Html.CheckBoxFor(m => m.DecubitusTenderness, new { @class = "decubitus-symptom" })
            @Html.Label("Tenderness*")
        </div>
        <div>
            @Html.CheckBoxFor(m => m.DecubitusSwelling, new { @class = "decubitus-symptom" })
            @Html.Label("Swelling of decubitus wound edges*")
        </div>

        <!-- Hidden AND Section -->
        <div id="decubitus-and-section">
            <p><strong>AND</strong></p>
            <div>
                @Html.CheckBoxFor(m => m.DecubitusOrganismIdentified, new { @id = "decubitus-organism" })
                @Html.Label("Organism(s) identified from blood by a culture or non-culture based microbiologic testing method")
            </div>
        </div>

        <!-- Hidden Culture Table Section -->
        <div id="decubitus-culture-section">
            <table>
                <tr>
                        <td>
                            @Html.LabelFor(m => m.DecubitusCultureDate, "Culture date:") <br />
                            @Html.TextBoxFor(m => m.DecubitusCultureDate, new { @class = "form-control", type = "date" })
                        </td>
                        <td>@Html.LabelFor(m => m.DecubitusCultureResults, "Culture results:") <br />@Html.TextAreaFor(m => m.DecubitusCultureResults)</td>
                </tr>
            </table>
        </div>
    </fieldset>
    </div>

    <!-- ST-Soft Tissue Infection -->
    <div class="infection-section" id="section-st">
    <fieldset>
        <legend>ST - Soft Tissue Infection</legend>
        <p>
            <em>
                For muscle and/or fascia
                [for example, necrotizing fasciitis, infectious gangrene, necrotizing cellulitis, infectious myositis, lymphadenitis, lymphangitis, or parotitis]
                excluding decubitus ulcers, burns, and infections at vascular access sites (see VASC)
            </em>
        </p>

        <p><strong>At least one (1) of the following criteria:</strong></p>

        <div>
            @Html.CheckBoxFor(m => m.STOrganismIdentified, new { @class = "st-trigger-checkbox" })
            @Html.Label("Organism(s) identified from tissue or drainage from affected site by culture/non-culture based microbiologic testing method")
        </div>
        <div>
            @Html.CheckBoxFor(m => m.STDrainage, new { @class = "st-trigger-checkbox" })
            @Html.Label("Purulent drainage at affected site")
        </div>
        <div>
            @Html.CheckBoxFor(m => m.STAbscess, new { @class = "st-trigger-checkbox" })
            @Html.Label("Patient has an abscess or other evidence of infection on gross anatomic or histopathologic exam")
        </div>

        <!-- Hidden Culture Table Section -->
        <div id="st-culture-section">
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(m => m.STCultureDate, "Culture date:") <br />
                            @Html.TextBoxFor(m => m.STCultureDate, new { @class = "form-control", type = "date" })
                        </td>
                    <td>
                        @Html.LabelFor(m => m.STCultureResults, "Culture results:") <br />
                        @Html.TextAreaFor(m => m.STCultureResults)
                    </td>
                </tr>
            </table>
        </div>
    </fieldset>
    </div>
    <!-- SKIN Infection -->
    <div class="infection-section" id="section-skin">
    <fieldset>
        <legend>SKIN - SKIN INFECTION</legend>
        <p><em>For skin and/or subcutaneous, excluding decubitus ulcers, burns, and infections at vascular access sites</em></p>

        <p><strong>At least one (1) of the following criteria:</strong></p>

        <div>
            @Html.CheckBoxFor(m => m.SkinPurulentDrainage, new { @class = "trigger-checkbox" })
            @Html.Label("Purulent drainage")
        </div>
        <div>
            @Html.CheckBoxFor(m => m.SkinVesicles, new { @class = "trigger-checkbox" })
            @Html.Label("Vesicles")
        </div>
        <div>
            @Html.CheckBoxFor(m => m.SkinPustules, new { @class = "trigger-checkbox" })
            @Html.Label("Pustules")
        </div>
        <div>
            @Html.CheckBoxFor(m => m.SkinBoils, new { @class = "trigger-checkbox" })
            @Html.Label("Boils (excluding acne)")
        </div>

        <!-- Localized Symptoms -->
        <div id="localized-symptoms-section">
            <p><strong>At least two (2) of localized signs/symptoms:</strong></p>
            <div>@Html.CheckBoxFor(m => m.LocalizedPainTenderness, new { @class = "localized-checkbox" }) @Html.Label("Pain* or tenderness*")</div>
            <div>@Html.CheckBoxFor(m => m.LocalizedSwelling, new { @class = "localized-checkbox" }) @Html.Label("Swelling*")</div>
            <div>@Html.CheckBoxFor(m => m.LocalizedErythema, new { @class = "localized-checkbox" }) @Html.Label("Erythema*")</div>
            <div>@Html.CheckBoxFor(m => m.LocalizedHeat, new { @class = "localized-checkbox" }) @Html.Label("Heat*")</div>

            <!-- AND Section -->
            <div id="and-section">
                <p><strong>AND at least one (1) of:</strong></p>
                <div>@Html.CheckBoxFor(m => m.OrganismIdentifiedFromAspiration) @Html.Label("Organism(s) identified from aspirate or drainage from affected site by a culture or non-culture based testing method")</div>
                <div>@Html.CheckBoxFor(m => m.MultinucleatedGiantCellsSeen) @Html.Label("Multinucleated giant cells seen on microscopic examination of affected tissue")</div>
                <div>@Html.CheckBoxFor(m => m.DiagnosticAntibodyTiter) @Html.Label("Diagnostic single antibody titer (IgM) or 4-fold increase in paired sera (IgG) for organism")</div>
            </div>
        </div>
        <table>
            <tr>
                    <td>
                        @Html.LabelFor(m => m.SkinCultureDate, "Culture date:") <br />
                        @Html.TextBoxFor(m => m.SkinCultureDate, new { @class = "form-control", type = "date" })
                    </td>
                    <td>@Html.LabelFor(m => m.SkinCultureResults, "Culture results:") <br />@Html.TextAreaFor(m => m.SkinCultureResults)</td>
            </tr>
        </table>
    </fieldset>
    </div>
    <button type="submit">Submit</button>
}



@if (TempData["Success"] != null)
{
    <p style="color:green;">@TempData["Success"]</p>
}
@section Scripts {
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            function checkTriggerCheckboxes() {
                let anyChecked = $('.trigger-checkbox').is(':checked');
                if (anyChecked) {
                    $('#localized-symptoms-section').slideDown();
                    $('#localized-symptoms-section :input').prop('disabled', false);
                } else {
                    $('#localized-symptoms-section').slideDown(); // still show
                    $('#localized-symptoms-section :input').prop('disabled', true);
                    $('#and-section').slideDown(); // still show
                    $('#and-section :input').prop('disabled', true);
                    $('.localized-checkbox').prop('checked', false);
                }
            }

            function checkLocalizedCheckboxes() {
                let checkedCount = $('.localized-checkbox:checked').length;
                if (checkedCount >= 2) {
                    $('#and-section').slideDown();
                    $('#and-section :input').prop('disabled', false);
                } else {
                    $('#and-section').slideDown(); // still show
                    $('#and-section :input').prop('disabled', true);
                }
            }

            function checkSTTriggerCheckboxes() {
                let anyChecked = $('.st-trigger-checkbox').is(':checked');
                $('#st-culture-section').slideDown(); // Always show
                $('#st-culture-section :input').prop('disabled', !anyChecked);
            }

            function checkDecubitusSymptoms() {
                let checkedCount = $('.decubitus-symptom:checked').length;
                $('#decubitus-and-section').slideDown(); // Always show
                $('#decubitus-and-section :input').prop('disabled', checkedCount < 2);

                if (checkedCount < 2) {
                    $('#decubitus-culture-section').slideDown(); // Still show
                    $('#decubitus-culture-section :input').prop('disabled', true);
                    $('#decubitus-organism').prop('checked', false);
                }
            }

            function setupBurnSections() {
                $('#burn-and-section, #burn-culture-section').show();

                // Initial load
                $('#burn-and-section :input').prop('disabled', !$('#burn-appearance-change').is(':checked'));
                $('#burn-culture-section :input').prop('disabled', !$('#burn-organism-identified').is(':checked'));

                // Events
                $('#burn-appearance-change').change(function () {
                    $('#burn-and-section :input').prop('disabled', !$(this).is(':checked'));
                    if (!$(this).is(':checked')) {
                        $('#burn-organism-identified').prop('checked', false);
                        $('#burn-culture-section :input').prop('disabled', true);
                    }
                });

                $('#burn-organism-identified').change(function () {
                    $('#burn-culture-section :input').prop('disabled', !$(this).is(':checked'));
                });
            }

            function toggleInfectionSections() {
                // First hide all sections
                $('#section-burn, #section-decu, #section-st, #section-skin').hide();

                // Then show sections if their InfectionType checkbox is checked
                $('input[name="InfectionType"]:checked').each(function () {
                    let val = $(this).val();
                    switch (val) {
                        case "BURN":
                            $('#section-burn').slideDown();
                            $('#section-burn .section-checkbox').prop('disabled', true); // keep disabled initially
                            break;
                        case "DECU":
                            $('#section-decu').slideDown();
                            $('#section-decu .section-checkbox').prop('disabled', true);
                            break;
                        case "ST":
                            $('#section-st').slideDown();
                            $('#section-st .section-checkbox').prop('disabled', true);
                            break;
                        case "SKIN":
                            $('#section-skin').slideDown();
                            $('#section-skin .section-checkbox').prop('disabled', true);
                            break;
                    }
                });

                // Optionally hide sections and disable checkboxes for those not selected
                const allSections = ['#section-burn', '#section-decu', '#section-st', '#section-skin'];
                allSections.forEach(section => {
                    if (!$(section).is(':visible')) {
                        $(section + ' .section-checkbox').prop('disabled', true);
                    }
                });
            }


            // === Initialize on DOM ready ===
            $(document).ready(function () {
                // General infection type section toggler
                toggleInfectionSections();
                $('input[name="InfectionType"]').change(toggleInfectionSections);

                // Trigger & Localized
                checkTriggerCheckboxes();
                $('.trigger-checkbox').change(checkTriggerCheckboxes);

                checkLocalizedCheckboxes();
                $('.localized-checkbox').change(checkLocalizedCheckboxes);

                // Soft Tissue
                checkSTTriggerCheckboxes();
                $('.st-trigger-checkbox').change(checkSTTriggerCheckboxes);

                // Decubitus
                checkDecubitusSymptoms();
                $('.decubitus-symptom').change(checkDecubitusSymptoms);
                $('#decubitus-organism').change(function () {
                    $('#decubitus-culture-section').slideDown(); // Always visible
                    $('#decubitus-culture-section :input').prop('disabled', !$(this).is(':checked'));
                });

                // Burn
                setupBurnSections();
            });
        </script>

    <script>
        $(document).ready(function () {
            $("#mdroCheckbox").change(function () {
                var mdroganismDiv = $("#mdroganismDiv");
                var mdroganismInput = $("#mdroganismInput");

                if ($(this).is(":checked")) {
                    mdroganismDiv.show();
                } else {
                    mdroganismDiv.hide();
                    mdroganismInput.val(""); // Clear input when hiding
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            function toggleDispositionTransfer() {
                var selectedValue = $("#dispositionSelect").val();
                if (selectedValue === "Transferred In" || selectedValue === "Transferred Out") {
                    $("#dispositionTransferDiv").show();
                } else {
                    $("#dispositionTransferDiv").hide();
                    $("#dispositionTransferInput").val(""); // Clear input field when hidden
                }
            }

            // Initial check
            toggleDispositionTransfer();

            // On change event
            $("#dispositionSelect").change(function () {
                toggleDispositionTransfer();
            });
        });
    </script>
}
