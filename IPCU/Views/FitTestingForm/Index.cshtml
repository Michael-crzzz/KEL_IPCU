@model X.PagedList.IPagedList<IPCU.Models.FitTestingForm>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Fit Testing Records";
}

<!-- Bootstrap, Font Awesome, AOS -->

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">

<h1 class="mb-4 text-center" data-aos="fade-down">Fit Testing Records</h1>

<div class="d-flex justify-content-between align-items-center mb-4" data-aos="fade-up" data-aos-delay="100">
    <a asp-action="Create" class="btn btn-primary"><i class="fa fa-plus"></i> Create New</a>
    <div class="d-flex align-items-center gap-3">
        <form method="get" action="@Url.Action("Index")" class="d-flex align-items-center gap-2">
            <label for="filterExpiring" class="form-label mb-0">Filter Expiring:</label>
            <select name="filterExpiring" id="filterExpiring" class="form-select filter-select">
                <option value="">All</option>
                <option value="true" selected="@(ViewData["FilterExpiring"] as bool? == true ? "selected" : null)">Expiring in 30 days</option>
            </select>

            <label for="testResult" class="form-label mb-0">Test Result:</label>
            <select name="testResult" id="testResult" class="form-select filter-select">
                <option value="" selected="@(string.IsNullOrEmpty(ViewData["SelectedTestResult"] as string) ? "selected" : null)">All</option>
                <option value="Passed" selected="@(ViewData["SelectedTestResult"] as string == "Passed" ? "selected" : null)">Passed</option>
                <option value="Failed" selected="@(ViewData["SelectedTestResult"] as string == "Failed" ? "selected" : null)">Failed</option>
            </select>
        </form>
        <form method="get" action="@Url.Action("Index", "FitTestingForm")" class="flex-grow-0">
            <input type="text" id="searchBox" class="form-control search-input" placeholder="Search..." name="searchTerm" value="@ViewBag.SearchTerm">
        </form>
    </div>
</div>

<div class="table-responsive" data-aos="fade-up" data-aos-delay="200">
    <table class="table table-bordered table-striped table-hover align-middle">
        <thead class="table-dark text-center">
            <tr>
                <th>Name of Healthcare Worker (HCW):</th>
                <th>Department/Unit/Office</th>
                <th>Test Results</th>
                <th>Date</th>
                <th>Expires On</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @{
                var index = 0;
            }
            @foreach (var item in Model)
            {
                <tr data-aos="fade-up" data-aos-delay="@(index * 50)">
                    <td>@Html.DisplayFor(modelItem => item.HCW_Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.DUO)</td>
                    <td style="color: @(item.Test_Results == "Failed" ? "red" : item.Test_Results == "Passed" ? "green" : "black")">
                        @item.Test_Results
                    </td>
                    <td>@item.SubmittedAt.ToString("MMMM dd, yyyy")</td>
                    <td>@item.ExpiringAt.ToString("MMMM dd, yyyy")</td>
                    <td>
                        <div class="btn-group">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm me-2">
                                <i class="fa fa-eye"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm me-2">
                                <i class="fa fa-trash"></i>
                            </a>
                            <a asp-action="GeneratePdf" asp-route-id="@item.Id" target="_blank" class="btn btn-secondary btn-sm me-3">
                                <i class="fa fa-print"></i>
                            </a>

                            @if (item.Test_Results != "Passed")
                            {
                                if (item.SubmissionCount < item.MaxRetakes)
                                {
                                    <small class="text-muted d-block">
                                        @{
                                            var remainingRetakes = item.MaxRetakes - item.SubmissionCount;
                                            var retakeText = remainingRetakes == 1 ? "retake remaining" : "retakes remaining";
                                        }
                                        <a asp-action="Details" asp-route-id="@item.Id" class="text-muted">
                                            @($"{remainingRetakes} {retakeText}")
                                        </a>
                                    </small>
                                }
                                else
                                {
                                    <span class="text-danger">No retakes remaining</span>
                                }
                            }
                        </div>
                    </td>
                </tr>
                index++;
            }
        </tbody>
    </table>
</div>

<!-- Smooth interaction styles -->
<style>
    .btn {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .btn:hover {
        transform: scale(1.05);
        box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);
    }

    table tr {
        transition: background-color 0.3s ease;
    }

        table tr:hover {
            background-color: #f8f9fa;
        }

    .filter-select, .search-input {
        transition: all 0.4s ease;
        border-radius: 0.375rem;
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        border: 1px solid #ced4da;
        background-color: #fff;
    }

        .filter-select:focus, .search-input:focus {
            box-shadow: 0 0 5px rgba(13, 110, 253, 0.5);
            transform: scale(1.02);
            border-color: #0d6efd;
            outline: none;
        }

        .filter-select:hover, .search-input:hover {
            border-color: #0d6efd;
            background-color: #f8f9fa;
        }

    .form-label {
        font-size: 0.9rem;
        color: #495057;
        margin-right: 0.5rem;
    }

    .gap-2 {
        gap: 0.5rem;
    }

    .gap-3 {
        gap: 1rem;
    }

    table tr {
        transition: background-color 0.3s ease;
    }

        table tr:hover {
            background-color: #f8f9fa;
        }

    #searchBox {
        transition: all 0.4s ease;
    }

        #searchBox:focus {
            box-shadow: 0 0 5px rgba(13, 110, 253, 0.5);
            transform: scale(1.02);
        }
</style>

<!-- Filter script fix -->
<script>
    document.getElementById("filterExpiring")?.addEventListener("change", function () {
        this.form.submit();
    });
    document.getElementById("testResult")?.addEventListener("change", function () {
        this.form.submit();
    });
</script>

<!-- Bootstrap + AOS -->

<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
<script>
    AOS.init({
        duration: 800,
        easing: 'ease-in-out',
        once: true
    });
</script>

<!-- Pagination -->
<div class="d-flex justify-content-center mt-4" data-aos="fade-up" data-aos-delay="300">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
    {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>
