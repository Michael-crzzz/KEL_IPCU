@model X.PagedList.IPagedList<IPCU.Models.FitTestingForm>
@using X.PagedList.Mvc.Core

@{
    ViewData["Title"] = "Fit Testing Records";
}

<!-- Bootstrap & Font Awesome -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

<h1 class="mb-4 text-center">Fit Testing Records</h1>

<div class="d-flex justify-content-between mb-3">
    <a asp-action="Create" class="btn btn-primary"><i class="fa fa-plus"></i> Create New</a>
    <form method="get" action="@Url.Action("Index")">
        <label for="filterExpiring">Filter Expiring:</label>
        <select name="filterExpiring" id="filterExpiring">
            <option value="">All</option>
            <option value="true" selected="@(ViewData["FilterExpiring"] as bool? == true ? "selected" : null)">Expiring in 30 days</option>
        </select>

        <label>
            Test Result:
            <select name="testResult">
                <option value="" selected="@(string.IsNullOrEmpty(ViewData["SelectedTestResult"] as string) ? "selected" : null)">All</option>
                <option value="Passed" selected="@(ViewData["SelectedTestResult"] as string == "Passed" ? "selected" : null)">Passed</option>
                <option value="Failed" selected="@(ViewData["SelectedTestResult"] as string == "Failed" ? "selected" : null)">Failed</option>
            </select>
        </label>

        <button type="submit" class="btn btn-primary">Apply Filters</button>
    </form>


    <input type="text" id="searchBox" class="form-control w-25" placeholder="Search...">
</div>

<div class="table-responsive">
    <table class="table table-bordered table-striped table-hover align-middle">
        <thead class="table-dark text-center">
            <tr>
                <th>Name of Healthcare Worker (HCW):</th>
                <th>Department/Unit/Office</th>
                @*<th>Limitation</th>*@
                <th>Test Results</th>
                <th>Date</th>
                <th>Expires On</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.HCW_Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.DUO)</td>
                    @*<td>@Html.DisplayFor(modelItem => item.Limitation)</td>*@
                    <td style="color: @(item.Test_Results == "Failed" ? "red" : item.Test_Results == "Passed" ? "green" : "black")">
                        @item.Test_Results
                    </td>
                    <td>@item.SubmittedAt.ToString("MMMM dd, yyyy")</td> <!-- Example: March 06, 2025 -->
                    <td>@item.ExpiringAt.ToString("MMMM dd, yyyy")</td> <!-- Expiry Date Calculated -->
                    <td>
                        <div class="btn-group">
                            <!-- <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm me-2">
                                <i class="fa fa-edit"></i>
                            </a>-->
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm me-2">
                                <i class="fa fa-eye"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm me-2">
                                <i class="fa fa-trash"></i>
                            </a>
                            <a asp-action="GeneratePdf" asp-route-id="@item.Id" target="_blank" class="btn btn-secondary btn-sm me-3">
                                <i class="fa fa-print"></i>
                            </a>

                            @if (item.Test_Results != "Passed")
                            {
                                if (item.SubmissionCount < item.MaxRetakes)
                                {
                                    <small class="text-muted d-block">
                                        @{
                                            var remainingRetakes = item.MaxRetakes - item.SubmissionCount;
                                            var retakeText = remainingRetakes == 1 ? "retake remaining" : "retakes remaining";
                                        }
                                        <a asp-action="Details" asp-route-id="@item.Id" class="text-muted">
                                            @($"{remainingRetakes} {retakeText}")
                                        </a>
                                    </small>
                                }
                                else
                                {
                                    <span class="text-danger">No retakes remaining</span>
                                }
                            }

                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<script>
    document.getElementById("expiryFilter").addEventListener("change", function() {
        var selectedValue = this.value;
        window.location.href = '@Url.Action("Index")' + '?expiryFilter=' + selectedValue;
    });
</script>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
    {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>
