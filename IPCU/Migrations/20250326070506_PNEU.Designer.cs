// <auto-generated />
using System;
using IPCU.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IPCU.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250326070506_PNEU")]
    partial class PNEU
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AssignedArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HEMOStationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SectionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UserValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("IPCU.Models.Antibiotic", b =>
                {
                    b.Property<int>("AntibioticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AntibioticId"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AntibioticId");

                    b.ToTable("tbantibiotics");
                });

            modelBuilder.Entity("IPCU.Models.CardiovascularSystemInfection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GrossEvidenceOfInfection")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Infant_Apnea")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Bradycardia")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Erythema")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Fever")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_HeatAtVascularSite")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Hypothermia")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Lethargy")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_MoreThan15Colonies")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Pain")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MoreThan15Colonies")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("Symptom_Erythema")
                        .HasColumnType("bit");

                    b.Property<bool>("Symptom_Fever")
                        .HasColumnType("bit");

                    b.Property<bool>("Symptom_HeatAtVascularSite")
                        .HasColumnType("bit");

                    b.Property<bool>("Symptom_Pain")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CardiovascularSystemInfection");
                });

            modelBuilder.Entity("IPCU.Models.DeviceConnected", b =>
                {
                    b.Property<string>("DeviceId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("DeviceInsert")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeviceRemove")
                        .HasColumnType("date");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("DeviceId");

                    b.HasIndex("HospNum");

                    b.ToTable("DeviceConnected");
                });

            modelBuilder.Entity("IPCU.Models.Diagnostics", b =>
                {
                    b.Property<int>("DiagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiagId"));

                    b.Property<DateTime>("DateCollection")
                        .HasColumnType("date");

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("IsolateFindingsResult")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SourceSite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DiagId");

                    b.HasIndex("HospNum");

                    b.ToTable("tbdiagnostics");
                });

            modelBuilder.Entity("IPCU.Models.DiagnosticsTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AntibioticId")
                        .HasColumnType("int");

                    b.Property<int>("DiagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AntibioticId");

                    b.HasIndex("DiagId");

                    b.ToTable("tbdiagnosticstreatments");
                });

            modelBuilder.Entity("IPCU.Models.EvaluationViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AddressClarifications")
                        .HasColumnType("float");

                    b.Property<double>("BalancePrinciples")
                        .HasColumnType("float");

                    b.Property<double>("ContentOrganization")
                        .HasColumnType("float");

                    b.Property<double>("ContentQuality")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EstablishRapport")
                        .HasColumnType("float");

                    b.Property<double>("FlowFollowed")
                        .HasColumnType("float");

                    b.Property<double>("FlowOfTopic")
                        .HasColumnType("float");

                    b.Property<double>("InitiateDiscussion")
                        .HasColumnType("float");

                    b.Property<double>("LearningActivities")
                        .HasColumnType("float");

                    b.Property<double>("ObjectiveStated")
                        .HasColumnType("float");

                    b.Property<double>("PracticeApplication")
                        .HasColumnType("float");

                    b.Property<double>("Preparedness")
                        .HasColumnType("float");

                    b.Property<double>("PresentKnowledge")
                        .HasColumnType("float");

                    b.Property<double>("RelevanceOfTopic")
                        .HasColumnType("float");

                    b.Property<double>("RespectForParticipants")
                        .HasColumnType("float");

                    b.Property<double>("RulesEstablished")
                        .HasColumnType("float");

                    b.Property<string>("SMELecturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SayToSpeaker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ServiceClassification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestionsForImprovement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TeachingPersonality")
                        .HasColumnType("float");

                    b.Property<double>("TechnicalCapability")
                        .HasColumnType("float");

                    b.Property<double>("TimeManagement")
                        .HasColumnType("float");

                    b.Property<DateTime>("TrainingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VisualAids")
                        .HasColumnType("float");

                    b.Property<double>("VoicePersonality")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("EvaluationViewModel");
                });

            modelBuilder.Entity("IPCU.Models.FitTestingForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Bending_Jogging")
                        .HasColumnType("bit");

                    b.Property<string>("DUO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DUO_Tester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deep_Breathing")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiringAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fit_Test_Solution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HCW_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Limitation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxRetakes")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Move_head_up_and_down")
                        .HasColumnType("bit");

                    b.Property<string>("Name_of_Fit_Tester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Normal_Breathing")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal_Breathing_2")
                        .HasColumnType("bit");

                    b.Property<string>("Professional_Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reading")
                        .HasColumnType("bit");

                    b.Property<string>("Respiratory_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sensitivity_Test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubmissionCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Test_Results")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Turn_head_side_to_side")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FitTestingForm");
                });

            modelBuilder.Entity("IPCU.Models.FitTestingFormHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Bending_Jogging")
                        .HasColumnType("bit");

                    b.Property<bool>("Deep_Breathing")
                        .HasColumnType("bit");

                    b.Property<int>("FitTestingFormId")
                        .HasColumnType("int");

                    b.Property<string>("Fit_Test_Solution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Move_head_up_and_down")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal_Breathing")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal_Breathing_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Reading")
                        .HasColumnType("bit");

                    b.Property<string>("Respiratory_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sensitivity_Test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Test_Results")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Turn_head_side_to_side")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FitTestingFormId");

                    b.ToTable("FitTestingFormHistory");
                });

            modelBuilder.Entity("IPCU.Models.HHActivity", b =>
                {
                    b.Property<int>("ActId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActId"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AfterHandRub")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AfterHandWash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BeforeHandRub")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BeforeHandWash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gloves")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("HHId")
                        .HasColumnType("int");

                    b.HasKey("ActId");

                    b.HasIndex("HHId");

                    b.ToTable("HHActivities");
                });

            modelBuilder.Entity("IPCU.Models.HandHygieneComplianceSummary", b =>
                {
                    b.Property<int>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SummaryId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ComplianceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Month")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SummaryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCompliantActions")
                        .HasColumnType("int");

                    b.Property<int>("TotalObservedOpportunities")
                        .HasColumnType("int");

                    b.HasKey("SummaryId");

                    b.ToTable("HandHygieneComplianceSummary");
                });

            modelBuilder.Entity("IPCU.Models.HandHygieneForm", b =>
                {
                    b.Property<int>("HHId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HHId"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ComplianceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnvironmentResource")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HCWType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Isolation")
                        .HasColumnType("bit");

                    b.Property<string>("IsolationPrecaution")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ObsvPatientCare")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ObsvPatientContact")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ObsvPatientEnvironment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoomType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("TotalCompliantActions")
                        .HasColumnType("int");

                    b.Property<int>("TotalObservedOpportunities")
                        .HasColumnType("int");

                    b.HasKey("HHId");

                    b.ToTable("HandHygieneForms");
                });

            modelBuilder.Entity("IPCU.Models.LaboratoryConfirmedBSI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("Apnea")
                        .HasColumnType("bit");

                    b.Property<bool>("Bradycardia")
                        .HasColumnType("bit");

                    b.Property<bool>("Chills")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Fever")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hypotension")
                        .HasColumnType("bit");

                    b.Property<bool>("Hypothermia")
                        .HasColumnType("bit");

                    b.Property<bool>("IdentifiedByCulture")
                        .HasColumnType("bit");

                    b.Property<bool>("IdentifiedByNonCulture")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnlyIntestinalOrganisms")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismNotFromAnotherSite")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoOrMorePositiveCultures")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ViridansGroupOnly")
                        .HasColumnType("bit");

                    b.Property<string>("centralline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lcbi2CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("lcbi2CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("lcbi2OrganismNotFromAnotherSite")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("lcbi3CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("lcbi3CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("lcbi3Fever")
                        .HasColumnType("bit");

                    b.Property<bool>("lcbi3OrganismNotFromAnotherSite")
                        .HasColumnType("bit");

                    b.Property<bool>("lcbi3TwoOrMorePositiveCultures")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("mbilcbi1CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mbilcbi1CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mbilcbi1Diarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi1GraftVsHostDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi1IdentifiedByCulture")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi1IdentifiedByNonCulture")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi1Neutropenic")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("mbilcbi2CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mbilcbi2CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mbilcbi2Diarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi2GraftVsHostDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi2Neutropenic")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("mbilcbi3CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mbilcbi3CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mbilcbi3Diarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi3GraftVsHostDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi3Neutropenic")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi3ViridansGroupOnly")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LaboratoryConfirmedBSI");
                });

            modelBuilder.Entity("IPCU.Models.Patient", b =>
                {
                    b.Property<string>("IdNum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("AdmDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdmLocation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AdmType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeathType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("RoomID")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("IdNum");

                    b.ToTable("tbpatient");
                });

            modelBuilder.Entity("IPCU.Models.PatientForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PatientForms");
                });

            modelBuilder.Entity("IPCU.Models.PatientMaster", b =>
                {
                    b.Property<string>("HospNum")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("AccountNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EmpNum")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HaiCount")
                        .HasColumnType("int");

                    b.Property<bool>("HaiStatus")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PatientStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PatientType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("SeniorCitizenWithID")
                        .HasColumnType("bit");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("cellnum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HospNum");

                    b.ToTable("tbmaster");
                });

            modelBuilder.Entity("IPCU.Models.PediatricVAEChecklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfIntubation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FiO2Increase")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MAPIncrease")
                        .HasColumnType("bit");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PediatricVAEChecklist");
                });

            modelBuilder.Entity("IPCU.Models.Pneumonia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AbscessFormationOrFoci_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Adults70old1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Adults70old2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Adults70old2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Adults70old3")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("ApneaOrTachypneaOrNasalFlaring1_2")
                        .HasColumnType("bit");

                    b.Property<bool>("BALCellsContainIntracellularBacteria_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("BradycardiaOrTachycardia1_2")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cough1_2")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CultureDate2_1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CultureDate2_2")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults2_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CultureResults2_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DetectionofLegionella2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("DirectMicroscopicExam3")
                        .HasColumnType("bit");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EvidenceOfFungalInvasion_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("EvidenceofFungi3")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever3")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FourfoldriseLegionella2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("FourfoldrisePaired2_2")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hemoptysis3")
                        .HasColumnType("bit");

                    b.Property<bool>("HistopathologicExam2_1")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IdentificationCandida3")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Leukocytosis1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukocytosis2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukocytosis2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukopenia12_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukopenia12_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukopenia1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukopenia1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("LeukopeniaOrLeukocytosis1_2")
                        .HasColumnType("bit");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NewPurulentSputum1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum1_2")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum3")
                        .HasColumnType("bit");

                    b.Property<bool>("NewWorseningCough1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("NonCultureDiagnostic3")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismIdentifiedFromBlood_2_1")
                        .HasColumnType("bit");

                    b.Property<string>("PNEU_Subclass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive1_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive1_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive1_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive2_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive2_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PleuriticChestPain3")
                        .HasColumnType("bit");

                    b.Property<bool>("PositiveCultureFungi3")
                        .HasColumnType("bit");

                    b.Property<bool>("PositiveQuantitativeCultureLRT_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("PositiveQuantitativeCultureLungTissue_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesOrBronchialBreathSounds1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesOrBronchialBreathSounds2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesOrBronchialBreathSounds2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesOrBronchialBreathSounds3")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesorBronchial1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("TemperatureInstability1_2")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VirusBordetellaLegionella2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WheezingRalesOrRhonchi1_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningCoughOrDyspnea1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningCoughOrDyspnea2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningCoughOrDyspnea2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningCoughOrDyspnea3")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGas1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange1_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange3")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Pneumonias");
                });

            modelBuilder.Entity("IPCU.Models.PostTestClinical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("POSTCSCORE")
                        .HasColumnType("real");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostTestClinicals");
                });

            modelBuilder.Entity("IPCU.Models.PostTestNonClinical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POSTNONSCORE")
                        .HasColumnType("int");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostTestNonCLinicals");
                });

            modelBuilder.Entity("IPCU.Models.PreTestClinical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRETCSCORE")
                        .HasColumnType("int");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreTestClinicals");
                });

            modelBuilder.Entity("IPCU.Models.PreTestNonClinical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRETNONCSCORE")
                        .HasColumnType("int");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreTestNonClinicals");
                });

            modelBuilder.Entity("IPCU.Models.SSTInfectionModel", b =>
                {
                    b.Property<int>("SSTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSTID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("BurnAppearanceChange")
                        .HasColumnType("bit");

                    b.Property<string>("BurnCultureDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BurnCultureResults")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BurnOrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecubitusCultureDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecubitusCultureResults")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DecubitusErythema")
                        .HasColumnType("bit");

                    b.Property<bool>("DecubitusOrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("DecubitusSwelling")
                        .HasColumnType("bit");

                    b.Property<bool>("DecubitusTenderness")
                        .HasColumnType("bit");

                    b.Property<bool>("DiagnosticAntibodyTiter")
                        .HasColumnType("bit");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfectionClassification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfectionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LocalizedErythema")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalizedHeat")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalizedPainTenderness")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalizedSwelling")
                        .HasColumnType("bit");

                    b.Property<bool>("MDRO")
                        .HasColumnType("bit");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MultinucleatedGiantCellsSeen")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismIdentifiedFromAspiration")
                        .HasColumnType("bit");

                    b.Property<bool>("STAbscess")
                        .HasColumnType("bit");

                    b.Property<string>("STCultureDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("STCultureResults")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("STDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("STOrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("SkinBoils")
                        .HasColumnType("bit");

                    b.Property<string>("SkinCultureDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinCultureResults")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SkinPurulentDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("SkinPustules")
                        .HasColumnType("bit");

                    b.Property<bool>("SkinVesicles")
                        .HasColumnType("bit");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SSTID");

                    b.ToTable("SSTInfectionModels");
                });

            modelBuilder.Entity("IPCU.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BasicInfection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GloveRemoval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDPrinting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N95")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostTestScore")
                        .HasColumnType("int");

                    b.Property<int?>("PreTestScore")
                        .HasColumnType("int");

                    b.Property<string>("ProperHand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingReport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("IPCU.Models.TrainingEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AddressClarifications")
                        .HasColumnType("float");

                    b.Property<double>("BalancePrinciples")
                        .HasColumnType("float");

                    b.Property<double>("ContentOrganization")
                        .HasColumnType("float");

                    b.Property<double>("ContentQuality")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfTraining")
                        .HasColumnType("datetime2");

                    b.Property<double>("EstablishRapport")
                        .HasColumnType("float");

                    b.Property<double>("FinalRating")
                        .HasColumnType("float");

                    b.Property<double>("FlowFollowed")
                        .HasColumnType("float");

                    b.Property<double>("FlowOfTopic")
                        .HasColumnType("float");

                    b.Property<double>("InitiateDiscussion")
                        .HasColumnType("float");

                    b.Property<double>("LearningActivities")
                        .HasColumnType("float");

                    b.Property<double>("ObjectiveStated")
                        .HasColumnType("float");

                    b.Property<double>("PostTestEvaluationGrade")
                        .HasColumnType("float");

                    b.Property<double>("PracticeApplication")
                        .HasColumnType("float");

                    b.Property<double>("Preparedness")
                        .HasColumnType("float");

                    b.Property<double>("PresentKnowledge")
                        .HasColumnType("float");

                    b.Property<string>("ProfessionalCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RelevanceOfTopic")
                        .HasColumnType("float");

                    b.Property<double>("RespectForParticipants")
                        .HasColumnType("float");

                    b.Property<double>("RulesEstablished")
                        .HasColumnType("float");

                    b.Property<string>("SMELecturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SayToSpeaker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestionsForImprovement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TeachingPersonality")
                        .HasColumnType("float");

                    b.Property<double>("TechnicalCapability")
                        .HasColumnType("float");

                    b.Property<double>("TimeManagement")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalParticipantsFemale")
                        .HasColumnType("int");

                    b.Property<int>("TotalParticipantsMale")
                        .HasColumnType("int");

                    b.Property<string>("TrainingMethodology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VisualAids")
                        .HasColumnType("float");

                    b.Property<double>("VoicePersonality")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TrainingEvaluation");
                });

            modelBuilder.Entity("IPCU.Models.TrainingSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GloveRemoval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDPrinting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PostScore")
                        .HasColumnType("real");

                    b.Property<float>("PostScore_Total")
                        .HasColumnType("real");

                    b.Property<float>("PreScore")
                        .HasColumnType("real");

                    b.Property<float>("PreScore_Total")
                        .HasColumnType("real");

                    b.Property<string>("ProperHand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingReport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingSummaries");
                });

            modelBuilder.Entity("IPCU.Models.UTIFormModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ABUTI_CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ABUTI_CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ABUTI_NoSymptoms")
                        .HasColumnType("bit");

                    b.Property<bool?>("ABUTI_OrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool?>("ABUTI_ValidUrineCulture")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool?>("CatheterPresent")
                        .HasColumnType("bit");

                    b.Property<bool?>("CatheterRemovedBeforeEvent")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasCostovertebralPain")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDysuria")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasFever")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasSuprapubicTenderness")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasUrinaryFrequency")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasUrinaryUrgency")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasUrineCultureWithTwoSpecies")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IUCInsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SUTI1b_CostovertebralPain")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SUTI1b_CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SUTI1b_CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SUTI1b_Dysuria")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_Fever")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_HadCatheterLessThan2Days")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_HasValidUrineCulture")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_NoCatheterInPlace")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_SuprapubicTenderness")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_UrinaryFrequency")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_UrinaryUrgency")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Apnea")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Bradycardia")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SUTI2_CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SUTI2_CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SUTI2_Fever")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_HasValidUrineCulture")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Hypothermia")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_IsOneYearOrLess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Lethargy")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_SuprapubicTenderness")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Vomiting")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UTIModels");
                });

            modelBuilder.Entity("IPCU.Models.Usi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("Apnea")
                        .HasColumnType("bit");

                    b.Property<bool>("Bradycardia")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Fever1")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever2")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HospitalNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Hypothermia")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lethargy")
                        .HasColumnType("bit");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LocalizedPain")
                        .HasColumnType("bit");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Organism")
                        .HasColumnType("bit");

                    b.Property<bool>("Organism2")
                        .HasColumnType("bit");

                    b.Property<bool>("PatienLessthan1year")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientAbscess")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientOrganism")
                        .HasColumnType("bit");

                    b.Property<bool>("PurulentDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("PurulentDrainage2")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vomiting")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Usi");
                });

            modelBuilder.Entity("IPCU.Models.VentilatorEventChecklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfIntubation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HospNum")
                        .HasColumnType("int");

                    b.Property<bool>("IVac1")
                        .HasColumnType("bit");

                    b.Property<bool>("IVac2")
                        .HasColumnType("bit");

                    b.Property<bool>("IVac3")
                        .HasColumnType("bit");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MDRO")
                        .HasColumnType("bit");

                    b.Property<string>("MDROOrganism")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfInvestigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pvap1Bronch")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap1Endo")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap1Lung")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap1Specimen")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Bronch")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Endo")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Lung")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Specimen")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Sputum")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap3Legionella")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap3Lung")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap3Organism")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap3Viral")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PvapCultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PvapResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UwArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vac1")
                        .HasColumnType("bit");

                    b.Property<bool>("Vac2")
                        .HasColumnType("bit");

                    b.Property<string>("VaeRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VentilatorEventChecklists");
                });

            modelBuilder.Entity("IPCU.Models.VitalSigns", b =>
                {
                    b.Property<int>("VitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VitalId"));

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("VitalSign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VitalSignDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VitalSignValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VitalId");

                    b.HasIndex("HospNum");

                    b.ToTable("VitalSigns");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IPCU.Models.DeviceConnected", b =>
                {
                    b.HasOne("IPCU.Models.PatientMaster", "PatientMaster")
                        .WithMany()
                        .HasForeignKey("HospNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientMaster");
                });

            modelBuilder.Entity("IPCU.Models.Diagnostics", b =>
                {
                    b.HasOne("IPCU.Models.PatientMaster", "Patient")
                        .WithMany()
                        .HasForeignKey("HospNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("IPCU.Models.DiagnosticsTreatment", b =>
                {
                    b.HasOne("IPCU.Models.Antibiotic", "Antibiotic")
                        .WithMany()
                        .HasForeignKey("AntibioticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPCU.Models.Diagnostics", "Diagnostic")
                        .WithMany("Treatments")
                        .HasForeignKey("DiagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Antibiotic");

                    b.Navigation("Diagnostic");
                });

            modelBuilder.Entity("IPCU.Models.FitTestingFormHistory", b =>
                {
                    b.HasOne("IPCU.Models.FitTestingForm", "FitTestingForm")
                        .WithMany()
                        .HasForeignKey("FitTestingFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FitTestingForm");
                });

            modelBuilder.Entity("IPCU.Models.HHActivity", b =>
                {
                    b.HasOne("IPCU.Models.HandHygieneForm", "HandHygieneForm")
                        .WithMany("Activities")
                        .HasForeignKey("HHId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HandHygieneForm");
                });

            modelBuilder.Entity("IPCU.Models.VitalSigns", b =>
                {
                    b.HasOne("IPCU.Models.PatientMaster", "PatientMaster")
                        .WithMany()
                        .HasForeignKey("HospNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientMaster");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IPCU.Models.Diagnostics", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("IPCU.Models.HandHygieneForm", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
