// <auto-generated />
using System;
using IPCU.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IPCU.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250422054605_NOR")]
    partial class NOR
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AssignedArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HEMOStationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SectionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UserRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UserValidUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("IPCU.Models.Antibiotic", b =>
                {
                    b.Property<int>("AntibioticId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AntibioticId"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AntibioticId");

                    b.ToTable("tbantibiotics");
                });

            modelBuilder.Entity("IPCU.Models.CardiovascularSystemInfection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GrossEvidenceOfInfection")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Infant_Apnea")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Bradycardia")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Erythema")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Fever")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_HeatAtVascularSite")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Hypothermia")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Lethargy")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_MoreThan15Colonies")
                        .HasColumnType("bit");

                    b.Property<bool>("Infant_Pain")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MoreThan15Colonies")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("Symptom_Erythema")
                        .HasColumnType("bit");

                    b.Property<bool>("Symptom_Fever")
                        .HasColumnType("bit");

                    b.Property<bool>("Symptom_HeatAtVascularSite")
                        .HasColumnType("bit");

                    b.Property<bool>("Symptom_Pain")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CardiovascularSystemInfection");
                });

            modelBuilder.Entity("IPCU.Models.ConstructionSite", b =>
                {
                    b.Property<int>("CSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CSID"));

                    b.Property<string>("AirHandlingUnitRunningComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirHandlingUnitRunningSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirhandlingAirExhaustedToAppropriateAreaComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirhandlingAirExhaustedToAppropriateAreaSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirhandlingMaintenanceLabelVisibleComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirhandlingMaintenanceLabelVisibleSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirhandlingNegativeAirMonitoredComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirhandlingNegativeAirMonitoredSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirhandlingWindowsClosedBehindBarrierComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AirhandlingWindowsClosedBehindBarrierSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierDoorsSealedComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierDoorsSealedSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierFloorCleanComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierFloorCleanSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierICRA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierICRAComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierTapeAdheringComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierTapeAdheringSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierWalkOffMatsComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarrierWalkOffMatsSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorRepresentativeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DresscodeProtectiveClothingWornComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DresscodeProtectiveClothingWornSelection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DresscodeWorkersClothingCleanUponExitingComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DresscodeWorkersClothingCleanUponExitingSelection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineeringSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ICPSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNameAndDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectareaAirVentsSealedOrDuctworkCappedComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaAirVentsSealedOrDuctworkCappedSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaDebrisRemovedInCoveredContainerDailyComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaDebrisRemovedInCoveredContainerDailySelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaDesignatedConstructionRouteOrMapPostedComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaDesignatedConstructionRouteOrMapPostedSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaHEPAFilteredVacuumOnJobsiteComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaHEPAFilteredVacuumOnJobsiteSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaRoutineCleaningDoneOnSiteComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaRoutineCleaningDoneOnSiteSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaTrashInAppropriateContainerComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectareaTrashInAppropriateContainerSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopeOfWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecificSiteOfActivity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneOrMobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrafficcontrolDoorsAndExitsFreeOfDebrisComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrafficcontrolDoorsAndExitsFreeOfDebrisSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrafficcontrolRestrictedToConstructionWorkersComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrafficcontrolRestrictedToConstructionWorkersSelection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitAreaRep")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CSID");

                    b.ToTable("ConstructionSites");
                });

            modelBuilder.Entity("IPCU.Models.DeviceConnected", b =>
                {
                    b.Property<string>("DeviceId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("DeviceClass")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DeviceInsert")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeviceRemove")
                        .HasColumnType("date");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("DeviceId");

                    b.HasIndex("HospNum");

                    b.ToTable("DeviceConnected");
                });

            modelBuilder.Entity("IPCU.Models.Diagnostics", b =>
                {
                    b.Property<int>("DiagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiagId"));

                    b.Property<DateTime>("DateCollection")
                        .HasColumnType("date");

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("IsolateFindingsResult")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SourceSite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DiagId");

                    b.HasIndex("HospNum");

                    b.ToTable("tbdiagnostics");
                });

            modelBuilder.Entity("IPCU.Models.DiagnosticsTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AntibioticId")
                        .HasColumnType("int");

                    b.Property<int>("DiagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AntibioticId");

                    b.HasIndex("DiagId");

                    b.ToTable("tbdiagnosticstreatments");
                });

            modelBuilder.Entity("IPCU.Models.EvaluationViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AddressClarifications")
                        .HasColumnType("float");

                    b.Property<double>("BalancePrinciples")
                        .HasColumnType("float");

                    b.Property<double>("ContentOrganization")
                        .HasColumnType("float");

                    b.Property<double>("ContentQuality")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EstablishRapport")
                        .HasColumnType("float");

                    b.Property<double>("FlowFollowed")
                        .HasColumnType("float");

                    b.Property<double>("FlowOfTopic")
                        .HasColumnType("float");

                    b.Property<double>("InitiateDiscussion")
                        .HasColumnType("float");

                    b.Property<double>("LearningActivities")
                        .HasColumnType("float");

                    b.Property<double>("ObjectiveStated")
                        .HasColumnType("float");

                    b.Property<double>("PracticeApplication")
                        .HasColumnType("float");

                    b.Property<double>("Preparedness")
                        .HasColumnType("float");

                    b.Property<double>("PresentKnowledge")
                        .HasColumnType("float");

                    b.Property<double>("RelevanceOfTopic")
                        .HasColumnType("float");

                    b.Property<double>("RespectForParticipants")
                        .HasColumnType("float");

                    b.Property<double>("RulesEstablished")
                        .HasColumnType("float");

                    b.Property<string>("SMELecturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SayToSpeaker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("ServiceClassification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestionsForImprovement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TeachingPersonality")
                        .HasColumnType("float");

                    b.Property<double>("TechnicalCapability")
                        .HasColumnType("float");

                    b.Property<double>("TimeManagement")
                        .HasColumnType("float");

                    b.Property<DateTime>("TrainingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VisualAids")
                        .HasColumnType("float");

                    b.Property<double>("VoicePersonality")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("EvaluationViewModel");
                });

            modelBuilder.Entity("IPCU.Models.FitTestingForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Bending_Jogging")
                        .HasColumnType("bit");

                    b.Property<string>("DUO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DUO_Tester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deep_Breathing")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiringAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fit_Test_Solution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HCW_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Limitation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxRetakes")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Move_head_up_and_down")
                        .HasColumnType("bit");

                    b.Property<string>("Name_of_Fit_Tester")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Normal_Breathing")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal_Breathing_2")
                        .HasColumnType("bit");

                    b.Property<string>("Professional_Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Reading")
                        .HasColumnType("bit");

                    b.Property<string>("Respiratory_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sensitivity_Test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubmissionCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Test_Results")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Turn_head_side_to_side")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FitTestingForm");
                });

            modelBuilder.Entity("IPCU.Models.FitTestingFormHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Bending_Jogging")
                        .HasColumnType("bit");

                    b.Property<bool>("Deep_Breathing")
                        .HasColumnType("bit");

                    b.Property<int>("FitTestingFormId")
                        .HasColumnType("int");

                    b.Property<string>("Fit_Test_Solution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Move_head_up_and_down")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal_Breathing")
                        .HasColumnType("bit");

                    b.Property<bool>("Normal_Breathing_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Reading")
                        .HasColumnType("bit");

                    b.Property<string>("Respiratory_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sensitivity_Test")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Test_Results")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Turn_head_side_to_side")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FitTestingFormId");

                    b.ToTable("FitTestingFormHistory");
                });

            modelBuilder.Entity("IPCU.Models.GIInfectionChecklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("CDIpseudomembranous")
                        .HasColumnType("bit");

                    b.Property<bool>("CDItoxin")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GENAbdominal")
                        .HasColumnType("bit");

                    b.Property<bool>("GENFever")
                        .HasColumnType("bit");

                    b.Property<bool>("GENHeadache")
                        .HasColumnType("bit");

                    b.Property<bool>("GENantibody")
                        .HasColumnType("bit");

                    b.Property<bool>("GENausea")
                        .HasColumnType("bit");

                    b.Property<bool>("GENenteric2")
                        .HasColumnType("bit");

                    b.Property<bool>("GENpenteric1")
                        .HasColumnType("bit");

                    b.Property<bool>("GEVomiting")
                        .HasColumnType("bit");

                    b.Property<bool>("GEdiarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("GITAbscess1")
                        .HasColumnType("bit");

                    b.Property<bool>("GITAbscess2")
                        .HasColumnType("bit");

                    b.Property<bool>("GITDrain")
                        .HasColumnType("bit");

                    b.Property<bool>("GITDysphagia")
                        .HasColumnType("bit");

                    b.Property<bool>("GITFEVER")
                        .HasColumnType("bit");

                    b.Property<bool>("GITGram")
                        .HasColumnType("bit");

                    b.Property<bool>("GITNausea")
                        .HasColumnType("bit");

                    b.Property<bool>("GITOdynophagia")
                        .HasColumnType("bit");

                    b.Property<bool>("GITPainTend")
                        .HasColumnType("bit");

                    b.Property<bool>("GITVomiting")
                        .HasColumnType("bit");

                    b.Property<bool>("GITblood")
                        .HasColumnType("bit");

                    b.Property<bool>("GITgastrointestinal")
                        .HasColumnType("bit");

                    b.Property<bool>("GITmicrobiologic")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IABAbdominal")
                        .HasColumnType("bit");

                    b.Property<bool>("IABAbscess1")
                        .HasColumnType("bit");

                    b.Property<bool>("IABAbscess2")
                        .HasColumnType("bit");

                    b.Property<bool>("IABFever")
                        .HasColumnType("bit");

                    b.Property<bool>("IABHypotension")
                        .HasColumnType("bit");

                    b.Property<bool>("IABJaundice")
                        .HasColumnType("bit");

                    b.Property<bool>("IABNausea")
                        .HasColumnType("bit");

                    b.Property<bool>("IABOrgintraabdominal")
                        .HasColumnType("bit");

                    b.Property<bool>("IABVomiting")
                        .HasColumnType("bit");

                    b.Property<bool>("IABmicrobiologic")
                        .HasColumnType("bit");

                    b.Property<bool>("IABorganism")
                        .HasColumnType("bit");

                    b.Property<bool>("IABtransaminase")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GIInfectionChecklists");
                });

            modelBuilder.Entity("IPCU.Models.HHActivity", b =>
                {
                    b.Property<int>("ActId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActId"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AfterHandRub")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AfterHandWash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BeforeHandRub")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BeforeHandWash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gloves")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("HHId")
                        .HasColumnType("int");

                    b.HasKey("ActId");

                    b.HasIndex("HHId");

                    b.ToTable("HHActivities");
                });

            modelBuilder.Entity("IPCU.Models.HandHygieneComplianceSummary", b =>
                {
                    b.Property<int>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SummaryId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ComplianceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Month")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SummaryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCompliantActions")
                        .HasColumnType("int");

                    b.Property<int>("TotalObservedOpportunities")
                        .HasColumnType("int");

                    b.HasKey("SummaryId");

                    b.ToTable("HandHygieneComplianceSummary");
                });

            modelBuilder.Entity("IPCU.Models.HandHygieneForm", b =>
                {
                    b.Property<int>("HHId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HHId"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ComplianceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnvironmentResource")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HCWType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Isolation")
                        .HasColumnType("bit");

                    b.Property<string>("IsolationPrecaution")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Observer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ObsvPatientCare")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ObsvPatientContact")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ObsvPatientEnvironment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoomType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("TotalCompliantActions")
                        .HasColumnType("int");

                    b.Property<int>("TotalObservedOpportunities")
                        .HasColumnType("int");

                    b.HasKey("HHId");

                    b.ToTable("HandHygieneForms");
                });

            modelBuilder.Entity("IPCU.Models.ICRA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Above_Data")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_Dust")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_HotColdWater")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_Mechanical")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_MedicalGas")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_Noise")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_Pressuraztion")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_Ventilation")
                        .HasColumnType("bit");

                    b.Property<bool>("Above_Vibration")
                        .HasColumnType("bit");

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreMeasures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Behind_Data")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_Dust")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_HotColdWater")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_Mechanical")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_MedicalGas")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_Noise")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_Pressuraztion")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_Ventilation")
                        .HasColumnType("bit");

                    b.Property<bool>("Behind_Vibration")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_Data")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_Dust")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_HotColdWater")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_Mechanical")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_MedicalGas")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_Noise")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_Pressuraztion")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_Ventilation")
                        .HasColumnType("bit");

                    b.Property<bool>("Below_Vibration")
                        .HasColumnType("bit");

                    b.Property<string>("CanPatientCare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CanSupplyAir")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstructionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorRepresentativeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineeringSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Front_Data")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_Dust")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_HotColdWater")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_Mechanical")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_MedicalGas")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_Noise")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_Pressuraztion")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_Ventilation")
                        .HasColumnType("bit");

                    b.Property<bool>("Front_Vibration")
                        .HasColumnType("bit");

                    b.Property<string>("HaveTraffic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ICPSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lateral_Data")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_Dust")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_HotColdWater")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_Mechanical")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_MedicalGas")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_Noise")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_Other")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_Pressuraztion")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_Ventilation")
                        .HasColumnType("bit");

                    b.Property<bool>("Lateral_Vibration")
                        .HasColumnType("bit");

                    b.Property<string>("LocalNumber_Above")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalNumber_Behind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalNumber_Below")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalNumber_Front")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalNumber_Lateral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientRiskGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreventiveMeasures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNameAndDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks_AreMeasures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks_CanPatientCare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks_CanSupplyAir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks_HaveTraffic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks_RiskofWater")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks_ShouldWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskGroup_Above")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskGroup_Behind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskGroup_Below")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskGroup_Front")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskGroup_Lateral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RiskofWater")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScopeOfWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShouldWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecificSiteOfActivity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneOrMobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitAreaRep")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ICRA");
                });

            modelBuilder.Entity("IPCU.Models.InfectionControl.Models.InfectionControlMonitoringForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaOrUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssessedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAndTimeOfMonitoring")
                        .HasColumnType("datetime2");

                    b.Property<string>("Equipment_StorageClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment_StorageClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Equipment_StorageClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Equipment_StorageClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment_StorageClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FollowUpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hallway_FloorsWallsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hallway_FloorsWallsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Hallway_FloorsWallsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hallway_FloorsWallsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hallway_FloorsWallsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hallway_NoObstruction_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hallway_NoObstruction_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Hallway_NoObstruction_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hallway_NoObstruction_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hallway_NoObstruction_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_NoExpired_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_NoExpired_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Medications_NoExpired_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medications_NoExpired_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_NoExpired_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_NoLooseNeedles_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_NoLooseNeedles_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Medications_NoLooseNeedles_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medications_NoLooseNeedles_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_NoLooseNeedles_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_VaccinesStored_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_VaccinesStored_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Medications_VaccinesStored_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medications_VaccinesStored_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_VaccinesStored_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_VialsDated_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_VialsDated_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Medications_VialsDated_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Medications_VialsDated_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medications_VialsDated_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc_SpecimensLabeled_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc_SpecimensLabeled_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Misc_SpecimensLabeled_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Misc_SpecimensLabeled_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc_SpecimensLabeled_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc_StaffHygienePPE_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc_StaffHygienePPE_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Misc_StaffHygienePPE_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Misc_StaffHygienePPE_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Misc_StaffHygienePPE_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_AlcoholSanitizers_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_AlcoholSanitizers_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PatientExamRoom_AlcoholSanitizers_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientExamRoom_AlcoholSanitizers_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_AlcoholSanitizers_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_CurtainsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_CurtainsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PatientExamRoom_CurtainsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientExamRoom_CurtainsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_CurtainsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_FloorsWallsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_FloorsWallsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PatientExamRoom_FloorsWallsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientExamRoom_FloorsWallsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_FloorsWallsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_NoFoodInCareAreas_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_NoFoodInCareAreas_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PatientExamRoom_NoFoodInCareAreas_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientExamRoom_NoFoodInCareAreas_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_NoFoodInCareAreas_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_NoSuppliesUnderSinks_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_NoSuppliesUnderSinks_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PatientExamRoom_NoSuppliesUnderSinks_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientExamRoom_NoSuppliesUnderSinks_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_NoSuppliesUnderSinks_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_PPEAvailable_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_PPEAvailable_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PatientExamRoom_PPEAvailable_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientExamRoom_PPEAvailable_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_PPEAvailable_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_SinkClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_SinkClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PatientExamRoom_SinkClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientExamRoom_SinkClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_SinkClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_SoapDispenser_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_SoapDispenser_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PatientExamRoom_SoapDispenser_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatientExamRoom_SoapDispenser_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientExamRoom_SoapDispenser_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refrigerator_Dedicated_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refrigerator_Dedicated_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Refrigerator_Dedicated_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Refrigerator_Dedicated_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refrigerator_Dedicated_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refrigerator_TempChecked_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refrigerator_TempChecked_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Refrigerator_TempChecked_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Refrigerator_TempChecked_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Refrigerator_TempChecked_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_FloorsWallsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_FloorsWallsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SoiledRoom_FloorsWallsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoiledRoom_FloorsWallsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_FloorsWallsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_LinenBagged_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_LinenBagged_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SoiledRoom_LinenBagged_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoiledRoom_LinenBagged_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_LinenBagged_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_NoPatientSupplies_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_NoPatientSupplies_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SoiledRoom_NoPatientSupplies_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoiledRoom_NoPatientSupplies_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoiledRoom_NoPatientSupplies_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitAreaStaffSignature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_CleanSoiledSeparation_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_CleanSoiledSeparation_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_CleanSoiledSeparation_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_CleanSoiledSeparation_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_CleanSoiledSeparation_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_FIFOStocks_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_FIFOStocks_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_FIFOStocks_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_FIFOStocks_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_FIFOStocks_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_FloorsWallsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_FloorsWallsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_FloorsWallsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_FloorsWallsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_FloorsWallsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesInBathrooms_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesInBathrooms_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_NoSuppliesInBathrooms_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_NoSuppliesInBathrooms_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesInBathrooms_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesOnFloor_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesOnFloor_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_NoSuppliesOnFloor_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_NoSuppliesOnFloor_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesOnFloor_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesUnderSink_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesUnderSink_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_NoSuppliesUnderSink_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_NoSuppliesUnderSink_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_NoSuppliesUnderSink_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SterileTraysClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SterileTraysClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_SterileTraysClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_SterileTraysClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SterileTraysClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SuppliesFromCeiling_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SuppliesFromCeiling_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_SuppliesFromCeiling_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_SuppliesFromCeiling_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SuppliesFromCeiling_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SuppliesNotExpired_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SuppliesNotExpired_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UtilityRoom_SuppliesNotExpired_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UtilityRoom_SuppliesNotExpired_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UtilityRoom_SuppliesNotExpired_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_FoodInDesignatedArea_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_FoodInDesignatedArea_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WaitingArea_FoodInDesignatedArea_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WaitingArea_FoodInDesignatedArea_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_FoodInDesignatedArea_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_FurnitureClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_FurnitureClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WaitingArea_FurnitureClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WaitingArea_FurnitureClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_FurnitureClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_TrashDisposed_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_TrashDisposed_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WaitingArea_TrashDisposed_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WaitingArea_TrashDisposed_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaitingArea_TrashDisposed_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_BinsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_BinsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WasteMgmt_BinsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteMgmt_BinsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_BinsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_BinsNotOverfilled_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_BinsNotOverfilled_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WasteMgmt_BinsNotOverfilled_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteMgmt_BinsNotOverfilled_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_BinsNotOverfilled_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_ColorBinsAvailable_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_ColorBinsAvailable_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WasteMgmt_ColorBinsAvailable_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteMgmt_ColorBinsAvailable_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_ColorBinsAvailable_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_ProperDisposal_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_ProperDisposal_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WasteMgmt_ProperDisposal_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteMgmt_ProperDisposal_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_ProperDisposal_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_SharpsLabeled_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_SharpsLabeled_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WasteMgmt_SharpsLabeled_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteMgmt_SharpsLabeled_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_SharpsLabeled_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_SharpsNotOverfilled_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_SharpsNotOverfilled_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WasteMgmt_SharpsNotOverfilled_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WasteMgmt_SharpsNotOverfilled_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WasteMgmt_SharpsNotOverfilled_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ACClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ACClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_ACClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_ACClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ACClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CeilingClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CeilingClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_CeilingClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_CeilingClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CeilingClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ChartsStored_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ChartsStored_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_ChartsStored_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_ChartsStored_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ChartsStored_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CleanBathroom_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CleanBathroom_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_CleanBathroom_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_CleanBathroom_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CleanBathroom_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CountersClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CountersClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_CountersClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_CountersClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_CountersClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_DoorsWindowsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_DoorsWindowsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_DoorsWindowsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_DoorsWindowsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_DoorsWindowsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ExhaustFansClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ExhaustFansClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_ExhaustFansClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_ExhaustFansClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_ExhaustFansClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_FansClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_FansClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_FansClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_FansClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_FansClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_FloorsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_FloorsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_FloorsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_FloorsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_FloorsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_NoFoodOrDrinks_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_NoFoodOrDrinks_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_NoFoodOrDrinks_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_NoFoodOrDrinks_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_NoFoodOrDrinks_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_WallsClean_ActionDone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_WallsClean_Finding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("WorkArea_WallsClean_FuDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkArea_WallsClean_FuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkArea_WallsClean_Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InfectionControlMonitoringForm");
                });

            modelBuilder.Entity("IPCU.Models.LaboratoryConfirmedBSI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("Apnea")
                        .HasColumnType("bit");

                    b.Property<bool>("Bradycardia")
                        .HasColumnType("bit");

                    b.Property<bool>("Chills")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Fever")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hypotension")
                        .HasColumnType("bit");

                    b.Property<bool>("Hypothermia")
                        .HasColumnType("bit");

                    b.Property<bool>("IdentifiedByCulture")
                        .HasColumnType("bit");

                    b.Property<bool>("IdentifiedByNonCulture")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OnlyIntestinalOrganisms")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismNotFromAnotherSite")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoOrMorePositiveCultures")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ViridansGroupOnly")
                        .HasColumnType("bit");

                    b.Property<string>("centralline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lcbi2CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("lcbi2CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("lcbi2OrganismNotFromAnotherSite")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("lcbi3CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("lcbi3CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("lcbi3Fever")
                        .HasColumnType("bit");

                    b.Property<bool>("lcbi3OrganismNotFromAnotherSite")
                        .HasColumnType("bit");

                    b.Property<bool>("lcbi3TwoOrMorePositiveCultures")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("mbilcbi1CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mbilcbi1CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mbilcbi1Diarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi1GraftVsHostDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi1IdentifiedByCulture")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi1IdentifiedByNonCulture")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi1Neutropenic")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("mbilcbi2CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mbilcbi2CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mbilcbi2Diarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi2GraftVsHostDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi2Neutropenic")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("mbilcbi3CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("mbilcbi3CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("mbilcbi3Diarrhea")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi3GraftVsHostDisease")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi3Neutropenic")
                        .HasColumnType("bit");

                    b.Property<bool>("mbilcbi3ViridansGroupOnly")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LaboratoryConfirmedBSI");
                });

            modelBuilder.Entity("IPCU.Models.NoticeOfReferral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AreaUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Communicable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DOD")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Fever")
                        .HasColumnType("bit");

                    b.Property<bool>("HAAT")
                        .HasColumnType("bit");

                    b.Property<string>("InitialDiagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Laboratory")
                        .HasColumnType("bit");

                    b.Property<string>("PatientFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PostOp")
                        .HasColumnType("bit");

                    b.Property<bool>("Radiology")
                        .HasColumnType("bit");

                    b.Property<bool>("ReAdmitted")
                        .HasColumnType("bit");

                    b.Property<string>("Receivedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceivedbyDnT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Referredby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReferredbyDnT")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NoticeOfReferral");
                });

            modelBuilder.Entity("IPCU.Models.Patient", b =>
                {
                    b.Property<string>("IdNum")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("AdmDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdmLocation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AdmType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeathDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeathType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("RoomID")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("IdNum");

                    b.ToTable("tbpatient");
                });

            modelBuilder.Entity("IPCU.Models.PatientForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseMiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NurseSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PatientForms");
                });

            modelBuilder.Entity("IPCU.Models.PatientMaster", b =>
                {
                    b.Property<string>("HospNum")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("AccountNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("EmpNum")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HaiCount")
                        .HasColumnType("int");

                    b.Property<bool>("HaiStatus")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PatientStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("PatientType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("SeniorCitizenWithID")
                        .HasColumnType("bit");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("cellnum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("HospNum");

                    b.ToTable("tbmaster");
                });

            modelBuilder.Entity("IPCU.Models.PatientMovement", b =>
                {
                    b.Property<int>("MovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovementId"));

                    b.Property<int>("AdmissionCount")
                        .HasColumnType("int");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MortalityCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SentHomeCount")
                        .HasColumnType("int");

                    b.Property<int>("TransferInCount")
                        .HasColumnType("int");

                    b.Property<int>("TransferOutCount")
                        .HasColumnType("int");

                    b.HasKey("MovementId");

                    b.HasIndex("MovementDate", "Area")
                        .IsUnique();

                    b.ToTable("tbPatientMovement");
                });

            modelBuilder.Entity("IPCU.Models.PatientMovementDetail", b =>
                {
                    b.Property<int>("MovementDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovementDetailId"));

                    b.Property<string>("DestinationArea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("IdNum")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("MovementDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MovementId")
                        .HasColumnType("int");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SourceArea")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MovementDetailId");

                    b.HasIndex("HospNum");

                    b.HasIndex("MovementId");

                    b.ToTable("tbPatientMovementDetail");
                });

            modelBuilder.Entity("IPCU.Models.PediatricVAEChecklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfIntubation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FiO2Increase")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MAPIncrease")
                        .HasColumnType("bit");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PediatricVAEChecklist");
                });

            modelBuilder.Entity("IPCU.Models.Pneumonia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AbscessFormationOrFoci_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Adults70old1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Adults70old2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Adults70old2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Adults70old3")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("ApneaOrTachypneaOrNasalFlaring1_2")
                        .HasColumnType("bit");

                    b.Property<bool>("BALCellsContainIntracellularBacteria_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("BradycardiaOrTachycardia1_2")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Cough1_2")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CultureDate2_1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CultureDate2_2")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults2_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CultureResults2_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DetectionofLegionella2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("DirectMicroscopicExam3")
                        .HasColumnType("bit");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EvidenceOfFungalInvasion_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("EvidenceofFungi3")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever3")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FourfoldriseLegionella2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("FourfoldrisePaired2_2")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hemoptysis3")
                        .HasColumnType("bit");

                    b.Property<bool>("HistopathologicExam2_1")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IdentificationCandida3")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LaboratoryCriteria3")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukocytosis1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukocytosis2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukocytosis2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukopenia12_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukopenia12_2")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukopenia1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Leukopenia1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("LeukopeniaOrLeukocytosis1_2")
                        .HasColumnType("bit");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NewPurulentSputum1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum1_2")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("NewPurulentSputum3")
                        .HasColumnType("bit");

                    b.Property<bool>("NewWorseningCough1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("NonCultureDiagnostic3")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismIdentifiedFromBlood_2_1")
                        .HasColumnType("bit");

                    b.Property<string>("PNEU_Subclass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive1_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive1_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive1_3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive2_1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive2_2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersistentorProgressive3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PleuriticChestPain3")
                        .HasColumnType("bit");

                    b.Property<bool>("PositiveCultureFungi3")
                        .HasColumnType("bit");

                    b.Property<bool>("PositiveQuantitativeCultureLRT_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("PositiveQuantitativeCultureLungTissue_2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesOrBronchialBreathSounds1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesOrBronchialBreathSounds2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesOrBronchialBreathSounds2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesOrBronchialBreathSounds3")
                        .HasColumnType("bit");

                    b.Property<bool>("RalesorBronchial1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("TemperatureInstability1_2")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VirusBordetellaLegionella2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WheezingRalesOrRhonchi1_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningCoughOrDyspnea1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningCoughOrDyspnea2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningCoughOrDyspnea2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningCoughOrDyspnea3")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGas1_3")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange1_1")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange1_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange2_1")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange2_2")
                        .HasColumnType("bit");

                    b.Property<bool>("WorseningGasExchange3")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Pneumonias");
                });

            modelBuilder.Entity("IPCU.Models.PostConstruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AfterRemoval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterRemovalDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllMechanicalSpaces")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllMechanicalSpacesDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaIs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaIsDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaSurfaces")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaSurfacesDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeforeHoarding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeforeHoardingDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeilingTiles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CeilingTilesDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectHandWashing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectHandWashingDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectRoomPressurization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorrectRoomPressurizationDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("EngineeringSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimatedDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityBased")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityBasedDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaucetAerators")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaucetAeratorsDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HVACSystems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HVACSystemsDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ICPSign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfPlumbinghasbeenAffected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfPlumbinghasbeenAffectedDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntegrityofWalls")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntegrityofWallsDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlumbingifAffected")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlumbingifAffectedDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNameAndDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProjectStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecificSiteOfActivity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurfaceinPatient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurfaceinPatientDC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitAreaRep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereRequired")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhereRequiredlDC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostConstruction");
                });

            modelBuilder.Entity("IPCU.Models.PostTestClinical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("POSTCSCORE")
                        .HasColumnType("real");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostTestClinicals");
                });

            modelBuilder.Entity("IPCU.Models.PostTestNonClinical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("POSTNONSCORE")
                        .HasColumnType("int");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostTestNonCLinicals");
                });

            modelBuilder.Entity("IPCU.Models.PreTestClinical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRETCSCORE")
                        .HasColumnType("int");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreTestClinicals");
                });

            modelBuilder.Entity("IPCU.Models.PreTestNonClinical", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PRETNONCSCORE")
                        .HasColumnType("int");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PreTestNonClinicals");
                });

            modelBuilder.Entity("IPCU.Models.SSIP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AntimicrobialProphylaxisReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AntimicrobialProphylaxisYes")
                        .HasColumnType("bit");

                    b.Property<string>("AppropriatePPEReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AppropriatePPEYes")
                        .HasColumnType("bit");

                    b.Property<string>("BloodGlucoseMonitoredReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BloodGlucoseMonitoredYes")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrapeSeparatesInstrumentsReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DrapeSeparatesInstrumentsYes")
                        .HasColumnType("bit");

                    b.Property<string>("FootTrafficMinimizedReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FootTrafficMinimizedYes")
                        .HasColumnType("bit");

                    b.Property<string>("HairRemovedReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HairRemovedYes")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstrumentsSterilizedReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InstrumentsSterilizedYes")
                        .HasColumnType("bit");

                    b.Property<string>("Nurse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ORLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientCoveredReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PatientCoveredYes")
                        .HasColumnType("bit");

                    b.Property<string>("PatientDiagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientMiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostOpWoundCareReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PostOpWoundCareYes")
                        .HasColumnType("bit");

                    b.Property<string>("ProperVentilationReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ProperVentilationYes")
                        .HasColumnType("bit");

                    b.Property<string>("SexGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkinCleanedPriorReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SkinCleanedPriorYes")
                        .HasColumnType("bit");

                    b.Property<string>("SurfacesCleanedReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SurfacesCleanedYes")
                        .HasColumnType("bit");

                    b.Property<string>("Surgeon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurgicalHandScrubReminder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SurgicalHandScrubYes")
                        .HasColumnType("bit");

                    b.Property<string>("procedurenotes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SSIP");
                });

            modelBuilder.Entity("IPCU.Models.SSTInfectionModel", b =>
                {
                    b.Property<int>("SSTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSTID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("BurnAppearanceChange")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BurnCultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BurnCultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BurnOrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DecubitusCultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecubitusCultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DecubitusErythema")
                        .HasColumnType("bit");

                    b.Property<bool>("DecubitusOrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("DecubitusSwelling")
                        .HasColumnType("bit");

                    b.Property<bool>("DecubitusTenderness")
                        .HasColumnType("bit");

                    b.Property<bool>("DiagnosticAntibodyTiter")
                        .HasColumnType("bit");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InfectionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LocalizedErythema")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalizedHeat")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalizedPainTenderness")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalizedSwelling")
                        .HasColumnType("bit");

                    b.Property<bool>("MDRO")
                        .HasColumnType("bit");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MultinucleatedGiantCellsSeen")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismIdentifiedFromAspiration")
                        .HasColumnType("bit");

                    b.Property<bool>("STAbscess")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("STCultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("STCultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("STDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("STOrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("SkinBoils")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SkinCultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SkinCultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SkinPurulentDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("SkinPustules")
                        .HasColumnType("bit");

                    b.Property<bool>("SkinVesicles")
                        .HasColumnType("bit");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SSTID");

                    b.ToTable("SSTInfectionModels");
                });

            modelBuilder.Entity("IPCU.Models.SurgicalSiteInfectionChecklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AbscessOrEvidenceOfInfection")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("BURN_PatientChange")
                        .HasColumnType("bit");

                    b.Property<bool>("CDI_Patient")
                        .HasColumnType("bit");

                    b.Property<bool>("CDI_Positve")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DECU_Patienthastwo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfOperation")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeepIncisionOpenedOrDehisces")
                        .HasColumnType("bit");

                    b.Property<bool>("DiagnosisByPhysician")
                        .HasColumnType("bit");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Erythema")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GE_Diagnostic")
                        .HasColumnType("bit");

                    b.Property<bool>("GE_EntericDetected")
                        .HasColumnType("bit");

                    b.Property<bool>("GE_EntericIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("GE_PatientAcute")
                        .HasColumnType("bit");

                    b.Property<bool>("GE_PatientAtleastTwo")
                        .HasColumnType("bit");

                    b.Property<bool>("GIT_AbscessGastrointestinal")
                        .HasColumnType("bit");

                    b.Property<bool>("GIT_AnAbscess")
                        .HasColumnType("bit");

                    b.Property<bool>("GIT_ImagingTest")
                        .HasColumnType("bit");

                    b.Property<bool>("GIT_OrganismIdentifiedBloody")
                        .HasColumnType("bit");

                    b.Property<bool>("GIT_OrganismIdentifiedDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("GIT_OrganismSeen")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Heat")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IAB_OrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("IAB_OrganismSeen")
                        .HasColumnType("bit");

                    b.Property<bool>("IAB_PatientAtleastOne")
                        .HasColumnType("bit");

                    b.Property<bool>("IAB_PatientAtleastTwo")
                        .HasColumnType("bit");

                    b.Property<bool>("IAB_PatientOrganism")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IDSTCultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDSTCultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IDSTLocalizedPainOrTenderness")
                        .HasColumnType("bit");

                    b.Property<bool>("IDSTOrganismsIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("IDSTPatientHasSymptoms")
                        .HasColumnType("bit");

                    b.Property<bool>("IDSTPurulentDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("IDSTSuperficialIncisionOpened")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InvolvesDeepSoftTissues")
                        .HasColumnType("bit");

                    b.Property<bool>("InvolvesDeeperThanFascialOrMuscleLayers")
                        .HasColumnType("bit");

                    b.Property<bool>("InvolvesOnlySkinAndSubcutaneousTissue")
                        .HasColumnType("bit");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LocalizedPainOrTenderness")
                        .HasColumnType("bit");

                    b.Property<bool>("LocalizedSwelling")
                        .HasColumnType("bit");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MeetsSpecificOrganSpaceInfectionCriteria")
                        .HasColumnType("bit");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NoCulturePerformed")
                        .HasColumnType("bit");

                    b.Property<bool>("OREP_OrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("OREP_PatientAbscess")
                        .HasColumnType("bit");

                    b.Property<bool>("OREP_PatientOrganism")
                        .HasColumnType("bit");

                    b.Property<bool>("OREP_PatientSuspected")
                        .HasColumnType("bit");

                    b.Property<bool>("OREP_Physician")
                        .HasColumnType("bit");

                    b.Property<bool>("OSAbscessOrEvidenceOfInfection")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OSCultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OSCultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OSOrganismsIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("OSPurulentDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("OrganismsIdentified")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientHasSymptoms")
                        .HasColumnType("bit");

                    b.Property<bool>("PurulentDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("SSI_AtleastOne")
                        .HasColumnType("bit");

                    b.Property<bool>("SSI_Diagnostic")
                        .HasColumnType("bit");

                    b.Property<bool>("SSI_Multinucleated")
                        .HasColumnType("bit");

                    b.Property<bool>("SSI_Organism")
                        .HasColumnType("bit");

                    b.Property<bool>("SSI_PatientAtleastTwo")
                        .HasColumnType("bit");

                    b.Property<bool>("ST_Abscess")
                        .HasColumnType("bit");

                    b.Property<bool>("ST_PatienPurulent")
                        .HasColumnType("bit");

                    b.Property<bool>("ST_PatientOrganism")
                        .HasColumnType("bit");

                    b.Property<string>("Subclass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SuperficialIncisionOpened")
                        .HasColumnType("bit");

                    b.Property<string>("SurgeryDone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SurgicalSiteInfectionChecklist");
                });

            modelBuilder.Entity("IPCU.Models.TCSkillsChecklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfObservation")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBathroomFloorScrubbed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCleaningSolutionPrepared")
                        .HasColumnType("bit");

                    b.Property<bool>("IsColorCodedWasteEmptied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDoorFrameWiped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEquipmentAndCartPrepared")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFaucetAndHandlesCleaned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGlovesRemovedAndHandHygieneDone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHandHygieneAfterPPE")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHandHygieneAndGlovesDone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHighTouchAreasWiped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInfectiousWasteRemoved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLooseDebrisPickedUp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMirrorCleaned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOtherBathroomSurfacesCleaned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPPERemoved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProperAttireAndPPEWorn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRoomFloorMopped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSignageChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSinkAreaCleaned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpillSoakedWithSolution")
                        .HasColumnType("bit");

                    b.Property<bool>("IsToiletAndFlushHandlesCleaned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsedClothsDisposed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerticalSurfacesWiped")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWallsCleaned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWasteContainersEmptied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWindowSillAndWindowCleaned")
                        .HasColumnType("bit");

                    b.Property<string>("ObserverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCleaningItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreCleaningItems")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendationsOrActions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitAreaStaffSignature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TCSkillsChecklist");
                });

            modelBuilder.Entity("IPCU.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BasicInfection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GloveRemoval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDPrinting")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("N95")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostTestScore")
                        .HasColumnType("int");

                    b.Property<int?>("PreTestScore")
                        .HasColumnType("int");

                    b.Property<string>("ProperHand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingReport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trainees");
                });

            modelBuilder.Entity("IPCU.Models.TrainingEvaluation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AddressClarifications")
                        .HasColumnType("float");

                    b.Property<double>("BalancePrinciples")
                        .HasColumnType("float");

                    b.Property<double>("ContentOrganization")
                        .HasColumnType("float");

                    b.Property<double>("ContentQuality")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfTraining")
                        .HasColumnType("datetime2");

                    b.Property<double>("EstablishRapport")
                        .HasColumnType("float");

                    b.Property<double>("FinalRating")
                        .HasColumnType("float");

                    b.Property<double>("FlowFollowed")
                        .HasColumnType("float");

                    b.Property<double>("FlowOfTopic")
                        .HasColumnType("float");

                    b.Property<double>("InitiateDiscussion")
                        .HasColumnType("float");

                    b.Property<double>("LearningActivities")
                        .HasColumnType("float");

                    b.Property<double>("ObjectiveStated")
                        .HasColumnType("float");

                    b.Property<double>("PostTestEvaluationGrade")
                        .HasColumnType("float");

                    b.Property<double>("PracticeApplication")
                        .HasColumnType("float");

                    b.Property<double>("Preparedness")
                        .HasColumnType("float");

                    b.Property<double>("PresentKnowledge")
                        .HasColumnType("float");

                    b.Property<string>("ProfessionalCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RelevanceOfTopic")
                        .HasColumnType("float");

                    b.Property<double>("RespectForParticipants")
                        .HasColumnType("float");

                    b.Property<double>("RulesEstablished")
                        .HasColumnType("float");

                    b.Property<string>("SMELecturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SayToSpeaker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SuggestionsForImprovement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TeachingPersonality")
                        .HasColumnType("float");

                    b.Property<double>("TechnicalCapability")
                        .HasColumnType("float");

                    b.Property<double>("TimeManagement")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalParticipantsFemale")
                        .HasColumnType("int");

                    b.Property<int>("TotalParticipantsMale")
                        .HasColumnType("int");

                    b.Property<string>("TrainingMethodology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VisualAids")
                        .HasColumnType("float");

                    b.Property<double>("VoicePersonality")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TrainingEvaluation");
                });

            modelBuilder.Entity("IPCU.Models.TrainingSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CivilStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GloveRemoval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDPrinting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PostScore")
                        .HasColumnType("real");

                    b.Property<float>("PostScore_Total")
                        .HasColumnType("real");

                    b.Property<float>("PreScore")
                        .HasColumnType("real");

                    b.Property<float>("PreScore_Total")
                        .HasColumnType("real");

                    b.Property<string>("ProperHand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingReport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainingSummaries");
                });

            modelBuilder.Entity("IPCU.Models.UTIFormModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ABUTI_CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ABUTI_CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ABUTI_NoSymptoms")
                        .HasColumnType("bit");

                    b.Property<bool?>("ABUTI_OrganismIdentified")
                        .HasColumnType("bit");

                    b.Property<bool?>("ABUTI_ValidUrineCulture")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool?>("CatheterPresent")
                        .HasColumnType("bit");

                    b.Property<bool?>("CatheterRemovedBeforeEvent")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasCostovertebralPain")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasDysuria")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasFever")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasSuprapubicTenderness")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasUrinaryFrequency")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasUrinaryUrgency")
                        .HasColumnType("bit");

                    b.Property<bool?>("HasUrineCultureWithTwoSpecies")
                        .HasColumnType("bit");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("IUCInsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SUTI1b_CostovertebralPain")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SUTI1b_CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SUTI1b_CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SUTI1b_Dysuria")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_Fever")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_HadCatheterLessThan2Days")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_HasValidUrineCulture")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_NoCatheterInPlace")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_SuprapubicTenderness")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_UrinaryFrequency")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI1b_UrinaryUrgency")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Apnea")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Bradycardia")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SUTI2_CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SUTI2_CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SUTI2_Fever")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_HasValidUrineCulture")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Hypothermia")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_IsOneYearOrLess")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Lethargy")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_SuprapubicTenderness")
                        .HasColumnType("bit");

                    b.Property<bool?>("SUTI2_Vomiting")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UTIModels");
                });

            modelBuilder.Entity("IPCU.Models.Usi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("Apnea")
                        .HasColumnType("bit");

                    b.Property<bool>("Bradycardia")
                        .HasColumnType("bit");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureResults")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Fever1")
                        .HasColumnType("bit");

                    b.Property<bool>("Fever2")
                        .HasColumnType("bit");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Hypothermia")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lethargy")
                        .HasColumnType("bit");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LocalizedPain")
                        .HasColumnType("bit");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Organism")
                        .HasColumnType("bit");

                    b.Property<bool>("Organism2")
                        .HasColumnType("bit");

                    b.Property<bool>("PatienLessthan1year")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientAbscess")
                        .HasColumnType("bit");

                    b.Property<bool>("PatientOrganism")
                        .HasColumnType("bit");

                    b.Property<bool>("PurulentDrainage")
                        .HasColumnType("bit");

                    b.Property<bool>("PurulentDrainage2")
                        .HasColumnType("bit");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vomiting")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Usi");
                });

            modelBuilder.Entity("IPCU.Models.VAEMonitoringChecklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Accomplishedby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AfterCare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssessedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CleanandDirty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("ComplianceRate")
                        .HasColumnType("real");

                    b.Property<string>("Condensateinthe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateandTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnsuretoUse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HandHygiene")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadofBed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfTracheostomy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntubationKits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberofComplaint")
                        .HasColumnType("int");

                    b.Property<string>("ObservedStaff")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrcalCare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewedandApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SterileWater")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalObserved")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VAEMonitoringChecklist");
                });

            modelBuilder.Entity("IPCU.Models.VentilatorEventChecklist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Classification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfAdmission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfEvent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateofIntubation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Disposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DispositionTransfer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IVac1")
                        .HasColumnType("bit");

                    b.Property<bool>("IVac2")
                        .HasColumnType("bit");

                    b.Property<bool>("IVac3")
                        .HasColumnType("bit");

                    b.Property<string>("Investigator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDRO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MDROOrganism")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pvap1Bronch")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap1Endo")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap1Lung")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap1Specimen")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Bronch")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Endo")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Lung")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Specimen")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap2Sputum")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap3Legionella")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap3Lung")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap3Organism")
                        .HasColumnType("bit");

                    b.Property<bool>("Pvap3Viral")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PvapCultureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PvapResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitWardArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vac1")
                        .HasColumnType("bit");

                    b.Property<bool>("Vac2")
                        .HasColumnType("bit");

                    b.Property<string>("VaeRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VentilatorEventChecklists");
                });

            modelBuilder.Entity("IPCU.Models.VitalSigns", b =>
                {
                    b.Property<int>("VitalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VitalId"));

                    b.Property<string>("HospNum")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("VitalSign")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VitalSignDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VitalSignValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VitalId");

                    b.HasIndex("HospNum");

                    b.ToTable("VitalSigns");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IPCU.Models.DeviceConnected", b =>
                {
                    b.HasOne("IPCU.Models.PatientMaster", "PatientMaster")
                        .WithMany()
                        .HasForeignKey("HospNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientMaster");
                });

            modelBuilder.Entity("IPCU.Models.Diagnostics", b =>
                {
                    b.HasOne("IPCU.Models.PatientMaster", "Patient")
                        .WithMany()
                        .HasForeignKey("HospNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("IPCU.Models.DiagnosticsTreatment", b =>
                {
                    b.HasOne("IPCU.Models.Antibiotic", "Antibiotic")
                        .WithMany()
                        .HasForeignKey("AntibioticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPCU.Models.Diagnostics", "Diagnostic")
                        .WithMany("Treatments")
                        .HasForeignKey("DiagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Antibiotic");

                    b.Navigation("Diagnostic");
                });

            modelBuilder.Entity("IPCU.Models.FitTestingFormHistory", b =>
                {
                    b.HasOne("IPCU.Models.FitTestingForm", "FitTestingForm")
                        .WithMany()
                        .HasForeignKey("FitTestingFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FitTestingForm");
                });

            modelBuilder.Entity("IPCU.Models.HHActivity", b =>
                {
                    b.HasOne("IPCU.Models.HandHygieneForm", "HandHygieneForm")
                        .WithMany("Activities")
                        .HasForeignKey("HHId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HandHygieneForm");
                });

            modelBuilder.Entity("IPCU.Models.PatientMovementDetail", b =>
                {
                    b.HasOne("IPCU.Models.PatientMaster", "Patient")
                        .WithMany()
                        .HasForeignKey("HospNum")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IPCU.Models.PatientMovement", "PatientMovement")
                        .WithMany()
                        .HasForeignKey("MovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("PatientMovement");
                });

            modelBuilder.Entity("IPCU.Models.VitalSigns", b =>
                {
                    b.HasOne("IPCU.Models.PatientMaster", "PatientMaster")
                        .WithMany()
                        .HasForeignKey("HospNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientMaster");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IPCU.Models.Diagnostics", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("IPCU.Models.HandHygieneForm", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
